# GIS.lab configuration file sourced by installation scripts.
# Modify as needed. All settings should work by default.

# It is recommended to create custom configuration file 'config-user.cfg' and place all changes
# there, rather than modifying this file. File 'config-user.cfg' is always loaded after 'config.cfg'
# and thus it always overrides its values.


# ******************************************************* #
################ VIRTUAL MACHINE PROVIDERS ################
# ******************************************************* #
# Configuration specific to local VirtualBox provider

# First three network octets of GIS.lab network number.
# Example: 192.168.1
# Change requires new installation ($ vagrant destroy && vagrant up).
GISLAB_NETWORK="192.168.50"

# Server memory size in MB. Cloud providers (AWS) will silently ignore this option.
# Change requires server restart ($ vagrant reload).
GISLAB_SERVER_MEMORY=1024




# ******************************************************* #
###################### AWS PROVIDER #######################
# ******************************************************* #
# Configuration specific to Amazon AWS provider

# Run following command to install AWS provider:
# $ vagrant plugin install vagrant-aws

# AWS credentials
# For more informations about AWS credentials see:
# http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
# Change requires new installation ($ vagrant destroy && vagrant up).

# Access key ID
GISLAB_SERVER_AWS_ACCESS_KEY_ID=

# Secret access key
GISLAB_SERVER_AWS_SECRET_ACCESS_KEY=

# SSH keypair name available in AWS account. This key must match GISLAB_SSH_PRIVATE_KEY.
GISLAB_SERVER_AWS_KEYPAIR_NAME=


# Instance AMI. See http://cloud-images.ubuntu.com/locator/ec2/
GISLAB_SERVER_AWS_AMI=ami-af7abed8

# Instance type. See http://aws.amazon.com/ec2/instance-types/
# Recommended instance types for production deployment are:
# m3.xlarge - 4 x vCPU, 15 GB RAM, 2 x 40 GB SSD
# c3.2xlarge - 8 x vCPU, 15 GB RAM, 2 x 80 GB SSD
GISLAB_SERVER_AWS_INSTANCE_TYPE=t1.micro

# Region to run instance in.
# See http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
GISLAB_SERVER_AWS_REGION=eu-west-1

# Zone to run instance in.
# See http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
GISLAB_SERVER_AWS_AVAILABILITY_ZONE=eu-west-1b

# List of security groups where GIS.lab server will be member of.
# Be careful to allow at least ports TCP 22 and 80 in at least one of them.
# To create security group and grant access to required ports run following commands:
# $ ec2-create-group gislab-server -d "GIS.lab server group" --region eu-west-1
# $ ec2-authorize gislab-server -P tcp -p 22 -s 0.0.0.0/0
# $ ec2-authorize gislab-server -P tcp -p 80 -s 0.0.0.0/0
# Example: ( gislab-cloud gislab-server )
GISLAB_SERVER_AWS_SECURITY_GROUPS=( gislab-server )




# ******************************************************* #
################## GENERAL CONFIGURATION ##################
# ******************************************************* #

# Unique string (without spaces) used to distinguish GIS.lab installations managed
# by one administrator or company.
# Example: "my_company_gislab1"
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_UNIQUE_ID="gislab1"

# Type of GIS.lab infrastructure to install.
# Possible options are:
# * lab: complete lab infrastructure for LAN. Includes server and client
# * server: only server installed
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_SUITE="lab"

# Absolute path to private SSH key which will be used for accessing GIS.lab server.
# WARNING: GIS.lab server will use Vagrant insecure SSH key if no value specified.
# Example: /home/user/.ssh/id_rsa
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_SSH_PRIVATE_KEY=

# Relative path public SSH key which will be used for accessing GIS.lab server.
# WARNING: GIS.lab server will use Vagrant insecure SSH key if no value specified.
# Example: user/id_rsa.pub
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_SSH_PUBLIC_KEY=

# Time zone. Check list of time zones here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_TIMEZONE="Europe/Bratislava"

# Ubuntu packages repository country code
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_APT_REPOSITORY_COUNTRY_MIRROR=sk

# Apt-cacher-ng proxy URL. Leave as is for none.
# Example: http://192.168.49.5:3142
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_APT_HTTP_PROXY=

# Relative path to file containing GIS.lab logo used on client user login screen
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_LOGO=user/graphic/gislab-logo.png

# Relative path to file containing GIS.lab client wallpaper
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_WALLPAPER=user/graphic/gislab-wallpaper.png

# Space delimited list of required GIS.lab plugins and account hooks. GIS.lab installation will fail
# if any of these plugins will be missing.
# Some useful plugins are collected here: https://github.com/imincik/gis-lab-plugins
# Example: ( account/install-example-data.sh server/create-default-adm-account.sh server/create-default-user-accounts.sh )
GISLAB_PLUGINS_REQUIRE=




# ******************************************************* #
######################### SERVER ##########################
# ******************************************************* #

# Email account which will be used as a relay to send emails from GIS.lab server.
# SMTP server must support TLS encryption on port 587. If no account configured
# email messages from GIS.lab server will be delivered locally to Linux user
# on server (vagrant or ubuntu).
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").

# SMTP address
# Example: smtp.gmail.com
GISLAB_SERVER_EMAIL_RELAY_SERVER=

# Email account login.
# Example: gislab-server@gmail.com 
GISLAB_SERVER_EMAIL_RELAY_LOGIN=

# Email account password.
# Example: VeryStrongPassword007
GISLAB_SERVER_EMAIL_RELAY_PASSWORD=




# ******************************************************* #
######################### CLIENT ##########################
# ******************************************************* #

# List of language codes of languages which should be installed on client beside English language.
# Example: ( sk cz )
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_CLIENT_LANGUAGES=( sk )

# Determines if client access will be restricted by MAC address configuration
# placed in 'GISLAB_CLIENTS_ALLOWED'.
# Possible options are:
# * deny:  only MAC addresses specified in 'GISLAB_CLIENTS_ALLOWED' can connect. Safe default, recommended
# * allow: all MAC addresses can connect. DO NOT USE this configuration if connected to corporate LAN (possible DHCP servers conflict)
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_UNKNOWN_MAC_POLICY=deny

# List of client MAC addressed allowed to connect.
# Example: ( 00:00:00:00:00:00 1c:75:08:7d:ce:e0 )
# Change requires reloading list of allowed clients ($ vagrant ssh -c "sudo gislab-allowmachines")
GISLAB_CLIENTS_ALLOWED=( 00:00:00:00:00:00 )


# List of extra packages to install to client images. Do not use <tab> for indentation.
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").

GISLAB_CLIENT_INSTALL_PACKAGES="
    bc
"

# Determines if client image should provide full support for VirtualBox client
# * no: do not support VirtualBox client
# * yes: provide support for VirtualBox client (VirtualBox guest additions installed)
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_CLIENT_VIRTUALBOX_SUPPORT="yes"

# Relative path to VBoxGuestAdditions.iso file which should be used for VirtualBox guest
# additions installation. If none provided, guest additions will be installed from
# default Ubuntu repository which could not match VirtualBox version on client and make
# a potential of compatibility problems. You can copy VBoxGuestAdditions.iso file
# from VirtualBox installation directory (/usr/share/virtualbox/ on Linux).
# Example: user/VBoxGuestAdditions.iso
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_CLIENT_VIRTUALBOX_ADDITIONS_ISO=

# Mount external network storage on client machines. Place here a line in same format
# as in '/etc/fstab' file.
# Example: 192.168.1.200:/ /media/storage nfs4 user,bg,exec 0 0
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_CLIENT_NETWORK_STORAGE=




# ******************************************************* #
#################### DEVELOPER SECTION ####################
# ******************************************************* #

# GIS.lab version value. In master Git branch it should be always set to 'dev' and it
# will be dynamically substituted with current Git stamp at installation.  
GISLAB_VERSION=dev

# Determines if GIS.lab server should start with graphical console. This is useful to
# gain more control with server boot process.
# * no: do not launch GUI console
# * yes: launch GUI console
GISLAB_SERVER_GUI_CONSOLE="no"

# Determines if enable installation in debug mode.
# Possible values are:
# * no: do not activate debug mode
# * yes: activate debug mode
GISLAB_DEBUG_INSTALL="no"

# Determines if enable running important server services in debug mode.
# Possible values are:
# * no: do not activate debug mode
# * yes: activate debug mode
GISLAB_DEBUG_SERVICES="no"

# Determines if client image should provide support for GIS software development which means installation of
# QGIS build dependencies and other software, libraries and helper scripts.
# * no: do not support GIS development
# * yes: provide support for GIS development
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_CLIENT_GIS_DEVELOPMENT_SUPPORT="no"

# Name of PPA repository containing QGIS version to install on server and client. If no value specified,
# QGIS will be installed from the same repository as other GIS packages. Value 'imincik/qgis-master'
# means, that QGIS will be installed from ppa:imincik/qgis-master. Repository must contain higher QGIS
# version than exists in standard GIS.lab repository.
# Change requires running upgrade ($ vagrant ssh -c "sudo gislab-upgrade -f").
GISLAB_QGIS_REPOSITORY=

