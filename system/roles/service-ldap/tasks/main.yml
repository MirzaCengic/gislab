---
#
###  LDAP DATABASE ###
#
# Install and configure authentication server.
#
# Logging: /var/log/syslog


- name: Install packages
  apt: pkg={{ item }} force=yes install_recommends=no state=latest
  with_items:
    - gnutls-bin
    - ldapscripts
    - ldap-utils
    - libnss-ldap
    - pwgen
    - python-ldap
    - slapd
    - ssl-cert


- name: Add 'openldap' user to 'ssl-cert' group
  shell: adduser openldap ssl-cert 2> /dev/null || true


# PAM
- name: Configure PAM to use Unix and LDAP authentication 
  shell: DEBIAN_FRONTEND=noninteractive {{ item }}
  with_items:
    - "pam-auth-update --force"
    - "auth-client-config -t nss -p lac_ldap"

- name: Configure PAM to use LDAP
  template: src=ldap/ldap-pam.conf.j2 dest=/etc/ldap.conf


- name: LDAP clients configuration
# configure base DN and URI and disable certificates verification
  template: src=ldap/ldap.conf.j2 dest=/etc/ldap/ldap.conf
  notify:
    - service slapd restart

- name: Configure nsswitch
  template: src=ldap/nsswitch.conf.j2 dest=/etc/nsswitch.conf
  notify:
    - service slapd restart


# LDAP admin credentials
- name: Generate LDAP admin password (run only once)
  shell: pwgen -s -N 1 10 > /etc/gislab/gislab_ldap_admin_password && chmod 600 /etc/gislab/gislab_ldap_admin_password
  args:
    creates: /etc/gislab/gislab_ldap_admin_password

- name: Get LDAP admin password
  shell: cat /etc/gislab/gislab_ldap_admin_password
  register: gislab_ldap_admin_password

- name: Generate hash of LDAP admin password
  shell: slappasswd -s {{ gislab_ldap_admin_password.stdout }} -h {SSHA}
  register: gislab_ldap_admin_password_hash

- name: Save LDAP admin password to LDAP db
  shell: 'printf "dn: olcDatabase={1}hdb,cn=config\nreplace: olcRootPW\nolcRootPW: {{ gislab_ldap_admin_password_hash.stdout }}\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'


# SSL
- name: Configure certificate authority
  template: src=ssl/ca.info.j2 dest=/etc/ssl/ca.info


- name: Generate self signed certificates and private key for encrypted LDAP communication (run only once)
  shell: "{{ item }}"
  with_items:
    - certtool --generate-privkey > /etc/gislab/gislab_ldap_private_cakey.pem
    - certtool --generate-self-signed
      --load-privkey /etc/gislab/gislab_ldap_private_cakey.pem
      --template /etc/ssl/ca.info
      --outfile /etc/gislab/gislab_ldap_cert_cacert.pem
    - certtool --generate-privkey
      --bits 1024
      --outfile /etc/gislab/gislab_ldap_private_server_slapd_key.pem
  args:
    creates: /etc/gislab/gislab_ldap_private_server_slapd_key.pem

- name: Install self signed certificates and private key for encrypted LDAP communication
  shell: "{{ item }}"
  with_items:
    - cp /etc/gislab/gislab_ldap_private_cakey.pem /etc/ssl/private/cakey.pem
    - cp /etc/gislab/gislab_ldap_cert_cacert.pem /etc/ssl/certs/cacert.pem
    - cp /etc/gislab/gislab_ldap_private_server_slapd_key.pem /etc/ssl/private/server_slapd_key.pem
    - chgrp ssl-cert /etc/ssl/private/server_slapd_key.pem
    - chmod g+r /etc/ssl/private/server_slapd_key.pem
    - chmod o-r /etc/ssl/private/server_slapd_key.pem
  notify:
    - service slapd restart

- name: Configure server
  template: src=ssl/server.info.j2 dest=/etc/ssl/server.info


- name: Generate certificate for encrypted LDAP communication (run only once)
  shell: certtool --generate-certificate
         --load-privkey /etc/ssl/private/server_slapd_key.pem
         --load-ca-certificate /etc/ssl/certs/cacert.pem
         --load-ca-privkey /etc/ssl/private/cakey.pem
         --template /etc/ssl/server.info
         --outfile /etc/gislab/gislab_ldap_cert_server_slapd_cert.pem
  args:
    creates: /etc/gislab/gislab_ldap_cert_server_slapd_cert.pem

- name: Install certificate for encrypted LDAP communication
  shell: cp /etc/gislab/gislab_ldap_cert_server_slapd_cert.pem /etc/ssl/certs/server_slapd_cert.pem
  notify:
    - service slapd restart


- name: Load TLS certificates configuration
  template: src=ldap/tls-certificates.ldif.j2 dest=/tmp/i.ldif

- name: Install TLS certificates configuration (run only once)
  shell: ldapmodify -Q -Y EXTERNAL -H ldapi:// -f /tmp/i.ldif
  when: GISLAB_INSTALL_ACTION == "install"


- name: Allow only encrypted connection (run only once)
  shell: 'printf "dn: cn=config\nchangetype: modify\nadd: olcSecurity\nolcSecurity: ssf=64\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'
  when: GISLAB_INSTALL_ACTION == "install"
  notify:
    - service slapd restart


# LDAP sudo
- name: Install LDAP sudo support
  shell: DEBIAN_FRONTEND=noninteractive SUDO_FORCE_REMOVE=yes apt-get -y install sudo-ldap
  notify:
    - service slapd restart

- name: Load sudo LDAP schema
  template: src=ldap/sudo.schema.j2 dest=/tmp/i.ldif

- name: Install sudo LDAP schema (run only once)
  shell: ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif
  when: GISLAB_INSTALL_ACTION == "install"


# LDAP Postfix schema
- name: Load Postfix LDAP schema
  template: src=ldap/postfix.schema.j2 dest=/tmp/i.ldif

- name: Install Postfix LDAP schema (run only once)
  shell: ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif
  when: GISLAB_INSTALL_ACTION == "install"


# LDAP indexes
- name: Load LDAP indexes
  template: src=ldap/indexes.ldif.j2 dest=/tmp/i.ldif

- name: Install LDAP indexes (run only once)
  shell: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif
  when: GISLAB_INSTALL_ACTION == "install"


# GIS.lab LDAP tree
- name: Load GIS.lab LDAP tree
  template: src=ldap/gislab-tree.ldif.j2 dest=/tmp/i.ldif

- name: Install GIS.lab LDAP tree (run only once)
  shell: 'ldapadd -Z -w {{ gislab_ldap_admin_password.stdout }} -D "cn=admin,dc=gis,dc=lab" -f /tmp/i.ldif'
  when: GISLAB_INSTALL_ACTION == "install"

- meta: flush_handlers


# LDAPscripts
- name: Configure LDAP scripts
  template: src=ldapscripts/ldapscripts.conf.j2 dest=/etc/ldapscripts/ldapscripts.conf

- name: Install LDAP scripts user's and group's templates
  template: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "ldapscripts/adduser.template.j2", dest: "/etc/ldapscripts/adduser.template" }
    - { src: "ldapscripts/addgroup.template.j2", dest: "/etc/ldapscripts/addgroup.template" }

- name: Load LDAP scripts runtime patch (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=719295)
  copy: src=static/ldapscripts/runtime-fix.patch dest=/tmp/runtime-fix.patch

- name: Install LDAP scripts runtime patch (run only once)
  shell: patch /usr/share/ldapscripts/runtime /tmp/runtime-fix.patch; rm -f /tmp/runtime-fix.patch
  when: GISLAB_INSTALL_ACTION == "install"

- name: Save LDAP admin password to LDAP scripts (run only once)
  shell: printf "{{ gislab_ldap_admin_password.stdout }}" > /etc/ldapscripts/ldapscripts.passwd && chmod 0600 /etc/ldapscripts/ldapscripts.passwd
  when: GISLAB_INSTALL_ACTION == "install"


# Logging
- name: Configure LDAP logging
  shell: 'printf "dn: cn=config\nchangetype: modify\ndelete: olcLogLevel\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'

- name: Configure LDAP logging
  shell: 'printf "dn: cn=config\nchangetype: modify\nadd: olcLogLevel\nolcLogLevel: none\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'
  when: not GISLAB_DEBUG_SERVICES 

- name: Configure LDAP logging (debug mode)
  shell: 'printf "dn: cn=config\nchangetype: modify\nadd: olcLogLevel\nolcLogLevel: stats\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'
  when: GISLAB_DEBUG_SERVICES 


# The end
- name: Remove temporary 'ldif' file
  file: path=/tmp/i.ldif state=absent
