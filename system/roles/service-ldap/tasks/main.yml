---
#
###  LDAP DATABASE ###
#
# Install and configure authentication server.


- name: Install packages
  apt: pkg={{ item }} force=yes install_recommends=no
  with_items:
    - gnutls-bin
    - ldapscripts
    - ldap-utils
    - libnss-ldap
    - pwgen
    - python-ldap
    - slapd
    - ssl-cert


- name: Configure PAM to use Unix and LDAP authentication 
  shell: DEBIAN_FRONTEND=noninteractive {{ item }}
  with_items:
    - "pam-auth-update --force"
    - "auth-client-config -t nss -p lac_ldap"

- name: Configure PAM to use LDAP
  template: src=ldap/ldap-pam.conf.j2 dest=/etc/ldap.conf

- name: LDAP clients configuration
# configure base DN and URI and disable certificates verification
  template: src=ldap/ldap.conf.j2 dest=/etc/ldap/ldap.conf

- name: Configure nsswitch
  template: src=ldap/nsswitch.conf.j2 dest=/etc/nsswitch.conf

- name: Configure LDAP scripts
  template: src=ldapscripts/ldapscripts.conf.j2 dest=/etc/ldapscripts/ldapscripts.conf


- name: Generate LDAP admin password (run only once)
# generally we don't need to know it, but we can find it in '/etc/ldapscripts/ldapscripts.passwd'
  shell: pwgen -s -N 1 10
  register: ldap_admin_pass
  args:
    creates: /var/lib/gislab/ldap-configuration.done

- name: Generate hash of LDAP admin password (run only once)
  shell: slappasswd -s {{ ldap_admin_pass.stdout }} -h {SSHA}
  register: ldap_admin_pass_hash
  args:
    creates: /var/lib/gislab/ldap-configuration.done

- name: Save LDAP admin password to LDAP db (run only once)
  shell: 'printf "dn: olcDatabase={1}hdb,cn=config\nreplace: olcRootPW\nolcRootPW: {{ ldap_admin_pass_hash.stdout }}\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'
  args:
    creates: /var/lib/gislab/ldap-configuration.done

- name: Save LDAP admin password to LDAP scripts (run only once)
  shell: printf "{{ ldap_admin_pass.stdout }}" > /etc/ldapscripts/ldapscripts.passwd && chmod 0600 /etc/ldapscripts/ldapscripts.passwd
  args:
    creates: /var/lib/gislab/ldap-configuration.done


# ssl
- name: Configure certificate authority
  template: src=ssl/ca.info.j2 dest=/etc/ssl/ca.info

- name: Create self signed certificates and private key for encrypted LDAP communication (run only once)
  shell: "{{ item }}"
  with_items:
    - certtool --generate-privkey > /etc/ssl/private/cakey.pem
    - certtool --generate-self-signed
      --load-privkey /etc/ssl/private/cakey.pem
      --template /etc/ssl/ca.info
      --outfile /etc/ssl/certs/cacert.pem
    - certtool --generate-privkey
      --bits 1024
      --outfile /etc/ssl/private/server_slapd_key.pem
  args:
    creates: /var/lib/gislab/ldap-configuration.done

- name: Configure server
  template: src=ssl/server.info.j2 dest=/etc/ssl/server.info

- name: Create certificate for encrypted LDAP communication (run only once)
  shell: certtool --generate-certificate
         --load-privkey /etc/ssl/private/server_slapd_key.pem
         --load-ca-certificate /etc/ssl/certs/cacert.pem
         --load-ca-privkey /etc/ssl/private/cakey.pem
         --template /etc/ssl/server.info
         --outfile /etc/ssl/certs/server_slapd_cert.pem
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Load TLS certificates configuration
  template: src=ldap/tls-certificates.ldif.j2 dest=/tmp/i.ldif

- name: Install TLS certificates configuration (run only once)
  shell: ldapmodify -Q -Y EXTERNAL -H ldapi:// -f /tmp/i.ldif
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Create 'openldap' user account (run only once)
  shell: "{{ item }}"
  with_items:
    - adduser openldap ssl-cert
    - chgrp ssl-cert /etc/ssl/private/server_slapd_key.pem
    - chmod g+r /etc/ssl/private/server_slapd_key.pem
    - chmod o-r /etc/ssl/private/server_slapd_key.pem
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Allow only encrypted connection (run only once)
  shell: 'printf "dn: cn=config\nchangetype: modify\nadd: olcSecurity\nolcSecurity: ssf=64\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Install LDAP sudo support (run only once)
  shell: DEBIAN_FRONTEND=noninteractive SUDO_FORCE_REMOVE=yes apt-get -y install sudo-ldap
  args:
    creates: /var/lib/gislab/ldap-configuration.done

- name: Load sudo LDAP schema
  template: src=ldap/sudo.schema.j2 dest=/tmp/i.ldif

- name: Install sudo LDAP schema (run only once)
  shell: ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Load Postfix LDAP schema
  template: src=ldap/postfix.schema.j2 dest=/tmp/i.ldif

- name: Install Postfix LDAP schema (run only once)
  shell: ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Load LDAP indexes
  template: src=ldap/indexes.ldif.j2 dest=/tmp/i.ldif

- name: Install LDAP indexes (run only once)
  shell: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif
  args:
    creates: /var/lib/gislab/ldap-configuration.done
  notify:
    - service slapd restart

- meta: flush_handlers


- name: Install LDAP scripts user's and group's templates
  template: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "ldapscripts/adduser.template.j2", dest: "/etc/ldapscripts/adduser.template" }
    - { src: "ldapscripts/addgroup.template.j2", dest: "/etc/ldapscripts/addgroup.template" }


- name: Load LDAP scripts runtime patch
# fix ldapscripts runtime script (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=719295)
  copy: src=static/ldapscripts/runtime-fix.patch dest=/tmp/runtime-fix.patch

- name: Install LDAP scripts runtime patch (run only once)
  shell: patch /usr/share/ldapscripts/runtime /tmp/runtime-fix.patch; rm -f /tmp/runtime-fix.patch
  args:
    creates: /var/lib/gislab/ldap-configuration.done


- name: Load GIS.lab LDAP tree
  template: src=ldap/gislab-tree.ldif.j2 dest=/tmp/i.ldif

- name: Install GIS.lab LDAP tree (run only once)
  shell: 'ldapadd -Z -w {{ ldap_admin_pass.stdout }} -D "cn=admin,dc=gis,dc=lab" -f /tmp/i.ldif'
  args:
    creates: /var/lib/gislab/ldap-configuration.done


# logging
- name: Configure LDAP logging
  shell: 'printf "dn: cn=config\nchangetype: modify\ndelete: olcLogLevel\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'

- name: Configure LDAP logging
  shell: 'printf "dn: cn=config\nchangetype: modify\nadd: olcLogLevel\nolcLogLevel: none\n" > /tmp/i.ldif;
         ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/i.ldif'


# the end
- name: Finally, mark successful LDAP configuration and remove temporary files
  shell: rm -f /tmp/i.ldif; touch /var/lib/gislab/ldap-configuration.done
  args:
    creates: /var/lib/gislab/ldap-configuration.done
