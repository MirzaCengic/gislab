--- node_modules/angular-ui-layout/src/ui-layout.orig.js	2015-11-16 11:01:28.331536000 +0100
+++ node_modules/angular-ui-layout/src/ui-layout.js	2015-11-16 14:24:19.436116736 +0100
@@ -389,10 +389,11 @@
       c.collapsed = !ctrl.containers[index].collapsed;
 
       var nextSplitbar = ctrl.containers[index+1];
       var nextContainer = ctrl.containers[index+2];
 
+      $scope.$broadcast('ui.layout.toggle', c);
       $scope.$apply(function() {
         if(c.collapsed) {
           c.actualSize = c.size;
           c.size = 0;
 
@@ -410,11 +411,10 @@
             nextContainer[ctrl.sizeProperties.flowProperty] += c.actualSize;
             nextContainer.size -= c.actualSize;
           }
         }
       });
-      $scope.$broadcast('ui.layout.toggle', c);
 
       return c.collapsed;
     };
 
     /**
@@ -429,37 +429,40 @@
       var prevContainer = ctrl.containers[index-2];
       var isLastContainer = index === (ctrl.containers.length - 1);
       var endDiff;
 
       ctrl.bounds = $element[0].getBoundingClientRect();
-
       c.collapsed = !ctrl.containers[index].collapsed;
 
+      $scope.$broadcast('ui.layout.toggle', c);
       $scope.$apply(function() {
         if(c.collapsed) {
           c.actualSize = c.size;
           c.size = 0;
 
           // adds additional space so the splitbar moves to the very end of the container
           // to offset the lost space when converting from percents to pixels
           endDiff = (isLastContainer) ? ctrl.bounds[ctrl.sizeProperties.sizeProperty] - c[ctrl.sizeProperties.flowProperty] - c.actualSize : 0;
 
-          if(prevSplitbar) prevSplitbar[ctrl.sizeProperties.flowProperty] += (c.actualSize + endDiff);
+          if(prevSplitbar) {
+            prevSplitbar[ctrl.sizeProperties.flowProperty] += (c.actualSize + endDiff);
+            c.lastTop = c.top;
+            c.top = prevSplitbar.top;
+          }
           if(prevContainer) prevContainer.size += (c.actualSize + endDiff);
-
         } else {
+          c.top = c.lastTop;
           c.size = c.actualSize;
 
           // adds additional space so the splitbar moves back to the proper position
           // to offset the additional space added when collapsing
           endDiff = (isLastContainer) ? ctrl.bounds[ctrl.sizeProperties.sizeProperty] - c[ctrl.sizeProperties.flowProperty] - c.actualSize : 0;
 
           if(prevSplitbar) prevSplitbar[ctrl.sizeProperties.flowProperty] -= (c.actualSize + endDiff);
           if(prevContainer) prevContainer.size -= (c.actualSize + endDiff);
         }
       });
-      $scope.$broadcast('ui.layout.toggle', c);
 
       return c.collapsed;
     };
 
     /**
