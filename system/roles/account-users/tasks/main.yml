---
#
### USER ACCOUNTS ###
#
# Set strong password for provisioning user account, remove other not required user accounts
# and configure backup of user accounts data.


- name: Install packages
  apt: pkg={{ item }} force=yes install_recommends=no state=latest
  with_items:
    - pwgen


# User accounts cleanup and security
- name: Detect if LDAP is installed
  shell: "ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// '(o=gis.lab)' 2>/dev/null || echo 'LDAP NOT INSTALLED'"
  args:
    executable: /bin/bash
  register: ldap_install_status

- name: Remove not required user accounts
# this task can be performed only until GIS.lab users accounts can be created (LDAP service is installed),
# otherwise it would remove GIS.lab user accounts
  shell: for userid in {1000..1010}; do username=$(getent passwd $userid | awk -F ':' '{print $1}');
         if [ "$username" != "" -a "$username" != "{{ GISLAB_PROVISIONING_USER }}" ]; then
           deluser --remove-home $username;
         fi;
         done
  args:
    executable: /bin/bash
  when: ldap_install_status.stdout == "LDAP NOT INSTALLED"


- name: Set strong password for provisioning user account
  shell: 'echo "{{ GISLAB_PROVISIONING_USER }}:$(pwgen -1 -n 24)" | chpasswd'

- name: Set strong permissions to provisioning user account home directory
  file: path={{ item }} mode=0700
  with_items:
    - /home/{{ GISLAB_PROVISIONING_USER }}
    - /home/{{ GISLAB_PROVISIONING_USER }}/.ssh

- name: Set SSH key for provisioning user account
  command: "{{ item }}"
  with_items:
    - "cp -a /etc/gislab/gislab_ssh_public_key.pub /home/{{ GISLAB_PROVISIONING_USER }}/.ssh/authorized_keys"
    - "chown {{ GISLAB_PROVISIONING_USER }}:{{ GISLAB_PROVISIONING_USER }} /home/{{ GISLAB_PROVISIONING_USER }}/.ssh/authorized_keys" 


# Shell
- name: Configure shell prompt for provisioning user
  lineinfile: dest=/home/{{ GISLAB_PROVISIONING_USER }}/.bashrc \
    regexp="^PS1=.*h\.GIS.lab(.*).*$" \
    line='PS1="\[$(tput bold)\]\u@\h.GIS.lab({{ GISLAB_UNIQUE_ID }}):\w\\$\[$(tput sgr0)\] "' \
    state=present

- name: Configure shell prompt for new user accounts
  lineinfile: dest=/etc/skel/.bashrc \
    regexp="^PS1=.*h\.GIS.lab(.*).*$" \
    line='PS1="\[$(tput bold)\]\u@\h.GIS.lab({{ GISLAB_UNIQUE_ID }}):\w\\$\[$(tput sgr0)\] "' \
    state=present


# System
- name: Flush user account installation directory
  file: path="{{ GISLAB_INSTALL_ACCOUNT_ROOT }}" state=absent

- name: Create user account installation directory
  file: path="{{ GISLAB_INSTALL_ACCOUNT_ROOT }}" state=directory

- name: Install user account files
  copy: src=static/system/ dest="{{ GISLAB_INSTALL_ACCOUNT_ROOT }}"


# Plugins
- name: Flush account plugins directory
  file: path="{{ GISLAB_INSTALL_USER_DATA_ROOT }}/plugins/account" state=absent

- name: Create account plugins directory
  file: path="{{ GISLAB_INSTALL_USER_DATA_ROOT }}/plugins/account" state=directory

- name: Install account plugins
  copy: src=../user/plugins/account/ dest="{{ GISLAB_INSTALL_USER_DATA_ROOT }}/plugins/account/"

- name: Set executable permissions for account plugins
  shell: chmod -R 0775 {{ GISLAB_INSTALL_USER_DATA_ROOT }}/plugins/account/*.*


# Backup
- name: Install user data backup script
  copy: src=static/bin/gislab-backup-users.sh dest=/etc/cron.d.bin/gislab-backup-users.sh mode=0755

- name: Activate user data backup
  template: src=cron/gislab-backup-users.j2 dest=/etc/cron.d/gislab-backup-users
