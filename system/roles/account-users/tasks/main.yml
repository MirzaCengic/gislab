---
#
### USER ACCOUNTS ###
#
# Set strong password for provisioning user account, remove other not required user accounts
# and configure backup of user accounts data.


- name: Install packages
  apt: pkg={{ item }} force=yes install_recommends=no state=latest
  with_items:
    - pwgen


- name: Remove user accounts which doesn't belong to GIS.lab users
  # reason of deleting these users is a fact, that some OS images are containing multiple user accounts for
  # provisioning (for example both vagrant and ubuntu) and leaving them can cause security problem
  # this task is performed only for accounts with ID in range 1000-1010. GIS.lab user accounts IDs begin with 3000
  shell: for userid in {1000..1010}; do username=$(getent passwd $userid | awk -F ':' '{print $1}');
         if [ "$username" != "" -a "$username" != "{{ GISLAB_PROVISIONING_USER }}" ]; then
           deluser --remove-home $username;
         fi;
         done
  args:
    executable: /bin/bash


- name: Set strong password for provisioning user account
  shell: 'echo "{{ GISLAB_PROVISIONING_USER }}:$(pwgen -1 -n 24)" | chpasswd'

- name: Set strong permissions to provisioning user account home directory
  file: path={{ item }} mode=0700
  with_items:
    - /home/{{ GISLAB_PROVISIONING_USER }}
    - /home/{{ GISLAB_PROVISIONING_USER }}/.ssh


# Shell
- name: Configure shell prompt for provisioning user
  lineinfile: dest=/home/{{ GISLAB_PROVISIONING_USER }}/.bashrc \
    regexp="^PS1=.*h\.GIS.lab(.*).*$" \
    line='PS1="\[$(tput bold)\]\u@\h.GIS.lab({{ GISLAB_UNIQUE_ID }}):\w\\$\[$(tput sgr0)\] "' \
    state=present

- name: Configure shell prompt for new user accounts
  lineinfile: dest=/etc/skel/.bashrc \
    regexp="^PS1=.*h\.GIS.lab(.*).*$" \
    line='PS1="\[$(tput bold)\]\u@\h.GIS.lab({{ GISLAB_UNIQUE_ID }}):\w\\$\[$(tput sgr0)\] "' \
    state=present


# System
- name: Flush user account installation directory
  file: path="{{ GISLAB_INSTALL_ACCOUNT_ROOT }}" state=absent

- name: Create user account installation directory
  file: path="{{ GISLAB_INSTALL_ACCOUNT_ROOT }}" state=directory

- name: Install user account files
  copy: src=static/system/ dest="{{ GISLAB_INSTALL_ACCOUNT_ROOT }}"


# Backup
- name: Install user data backup script
  copy: src=static/bin/gislab-backup-users.sh dest=/etc/cron.d.bin/gislab-backup-users.sh mode=0755

- name: Activate user data backup
  template: src=cron/gislab-backup-users.j2 dest=/etc/cron.d/gislab-backup-users
