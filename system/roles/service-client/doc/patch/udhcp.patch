--- udhcp.orig	2014-11-03 23:07:09.699787461 +0100
+++ ../../templates/udhcp/udhcp.j2	2014-11-03 23:40:05.471719471 +0100
@@ -1,4 +1,12 @@
 #!/bin/sh
+
+# This is a GIS.lab's fork of "client/initramfs/scripts/init-premount/udhcp" file located in
+# LTSP 5.3.7 source code. See "doc/patch/udhcp.patch" for changes.
+
+# To get this script working, we also need to use patched version of "busybox". See
+# "doc/patch/fix-NAK-response-from-other-server.patch" for changes.
+
+
 ################################################################################
 # Except for any bugs, it should be able to cope with the following scenarios:
 # 
@@ -155,16 +163,25 @@
 # TODO: it would be nice if we could prefer the interface with the connected cable, though
 interfaces=${interface:-$interfaces}
 
+# DHCP server IP address as regular expression
+gislab_network_server_ip_regex=$(echo "{{ GISLAB_NETWORK_SERVER_IP }}" | sed 's/\./\\./g')
+
 # Clear screen when quiet to dampen some noise
 [ "$quiet" = "y" ] && clear
 
 [ "$quiet" != "y" ] && echo "DHCP request for $i..."
 while [ -z "$configured" ]; do
-    for i in $interfaces; do    # Make a DHCP request for each interface
-        if udhcpc -n -C -s /tmp/dhcp-script.sh -i $i $hostname_param $ip_param >/dev/null 2>&1; then
-            configured="true"
-            break
-        fi
+    for i in $interfaces; do    # Make a DHCP request for each interface...
+        while udhcpc -n -C -s /tmp/dhcp-script.sh -i $i -x nisdomain:{{ GISLAB_UNIQUE_ID }}-client $hostname_param $ip_param >/dev/null 2>&1; do
+            grep "=" /tmp/dhcp-info.conf # print response provided by the DHCP server
+
+            # try until we get an offer from a proper GIS.lab server
+            grep -q "^siaddr=\"$gislab_network_server_ip_regex\"$" /tmp/dhcp-info.conf && configured="true" && break 2
+            echo "Received response from invalid DHCP server (response wanted from {{ GISLAB_NETWORK_SERVER_IP }}). Retrying ..."
+            echo
+            sleep 1
+            kill $(pidof udhcpc)
+        done
     done
 done
 [ "$quiet" != "y" ] && echo "Done."
