---
#
### GIS.lab MOBILE CLIENT ###
#
# Build GIS.lab Mobile client package.


- name: Install packages
  apt:
    pkg: "{{ item }}"
    force: yes
    install_recommends: no
    state: latest
  with_items:
    - debootstrap


- name: Create GIS.lab Mobile root directory
  file:
    dest: "{{ root_dir }}/root"
    state: directory


### INITIAL SYSTEM INSTALLATION
# debootstrap
# android SDK in 32-bit only
- name: Detect if base system is already installed by debootstrap
  stat:
    path: "{{ root_dir }}/root/bin/bash"
  register: debootstrap_status
  changed_when: False

- name: Install base system (without apt proxy)
  command: >
    debootstrap
    --arch i386
    {{ ansible_distribution_release }}
    {{ root_dir }}/root
    http://{{ GISLAB_APT_REPOSITORY_COUNTRY_MIRROR }}.archive.ubuntu.com/ubuntu/
  when:
    not debootstrap_status.stat.exists
    and GISLAB_APT_HTTP_PROXY|default(None) == None

- name: Install base system (with apt proxy)
  command: >
    debootstrap
    --arch i386 {{ ansible_distribution_release }}
    {{ root_dir }}/root
    {{ GISLAB_APT_HTTP_PROXY }}/{{ GISLAB_APT_REPOSITORY_COUNTRY_MIRROR }}.archive.ubuntu.com/ubuntu/
  when:
    not debootstrap_status.stat.exists
    and GISLAB_APT_HTTP_PROXY|default(None) != None


# locale
- name: Generate locale
  command: >
    chroot {{ root_dir }}/root
    locale-gen en_US.UTF-8

- name: Copy locale default configuration file
  command: >
    cp
    /etc/default/locale
    {{ root_dir }}/root/etc/default/locale

# timezone
- name: Configure timezone
  command: >
    cp
    {{ item }}
    {{ root_dir }}/root{{ item }}
  with_items:
    - /etc/timezone
    - /etc/localtime


### INSTALLATION
# mount necessary filesystems in chroot
- name: Mount /dev/pts and /proc
  command: >
    chroot {{ root_dir }}/root
    mount {{ item.opts }} {{ item.src }} {{ item.dest }}
  with_items:
    - {
        src: "devpts",
        dest: "/dev/pts",
        opts: "-t devpts -o rw,noexec,nosuid,gid=5,mode=620"
      }
    - {
        src: "proc",
        dest: "/proc",
        opts: "-t proc"
      }


# apt
- name: Purge apt configuration directory
  file:
    dest: "{{ root_dir }}/root/etc/apt"
    state: absent

- name: Copy apt configuration from server
  command: >
    cp -a
    /etc/apt
    {{ root_dir }}/root/etc/


- name: Remove debian packages cached during debootstrap
  command: rm -f {{ root_dir }}/root/var/cache/apt/archives/*.deb

- name: Activate shared apt cache
  command: >
    mount
    -o bind
    {{ GISLAB_PATH_CACHE }}/packages/apt
    {{ root_dir }}/root/var/cache/apt


# shared packages cache
- name: Create mount point for shared packages cache
  file:
    dest: "{{ root_dir }}/root{{ GISLAB_PATH_CACHE }}/packages"
    state: directory
    recurse: yes

- name: Activate shared packages cache
  command: >
    mount
    -o bind
    {{ GISLAB_PATH_CACHE }}/packages
    {{ root_dir }}/root{{ GISLAB_PATH_CACHE }}/packages


# daemons handling
- name: Avoid running daemons while installing
  template:
    src: "{{ item.src }}"
    dest: "{{ root_dir }}/root{{ item.dest }}"
    mode: 0755
  with_items:
    - {
        src: "roles/client-desktop/templates/bin/policy-rc.d.j2",
        dest: "/usr/sbin/policy-rc.d"
      }
    - {
        src: "roles/client-desktop/templates/bin/start-stop-daemon.j2",
        dest: "/sbin/start-stop-daemon"
      }


# system upgrade
- name: Update apt cache
  shell: >
    export DEBIAN_FRONTEND=noninteractive
    &&
    chroot {{ root_dir }}/root apt-get {{ apt_get_opts }} update
  args:
    executable: /bin/bash

- name: Upgrade system
  shell: >
    export DEBIAN_FRONTEND=noninteractive
    &&
    chroot {{ root_dir }}/root apt-get {{ apt_get_opts }} dist-upgrade
  args:
    executable: /bin/bash


# install packages
- name: Install minimal packages for GIS.lab Mobile build
  shell: >
    export DEBIAN_FRONTEND=noninteractive
    &&
    chroot {{ root_dir }}/root apt-get {{ apt_get_opts }} install ubuntu-standard
  args:
    executable: /bin/bash

- name: Install packages for GIS.lab Mobile build
  shell: >
    export DEBIAN_FRONTEND=noninteractive
    &&
    chroot {{ root_dir }}/root
    apt-get {{ apt_get_opts }} --no-install-recommends install {{ packages|join(' ') }}
  args:
    executable: /bin/bash


# android SDK
- name: Create GIS.lab Mobile build directory
  file:
    dest: "{{ root_dir }}/root/build"
    state: directory

- name: Download Android SDK
  command: >
    chroot {{ root_dir }}/root
    wget {{ wget_opts }} {{ android_sdk_url_base }}/android-sdk_r{{ android_sdk_version }}-linux.tgz
    -O {{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_r{{ android_sdk_version }}-linux.tgz
  args:
    creates: "{{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_{{ android_sdk_version }}-{{ android_build_tools_version }}-{{ android_api_version }}.tar.gz"

- name: Install Android SDK
  command: >
    chroot {{ root_dir }}/root
    tar -xzf
    {{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_r{{ android_sdk_version }}-linux.tgz
    -C /build/
  args:
    creates: "{{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_{{ android_sdk_version }}-{{ android_build_tools_version }}-{{ android_api_version }}.tar.gz"

- name: Install script for non-interactive Android platform, tools and API installation
  template:
    src: android-sdk-install.expect.j2
    dest: "{{ root_dir }}/root/build/android-sdk-install.expect"
    mode: 0755

- name: Install Android platform, tools and API
  command: >
    chroot {{ root_dir }}/root /build/android-sdk-install.expect
  args:
    creates: "{{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_{{ android_sdk_version }}-{{ android_build_tools_version }}-{{ android_api_version }}.tar.gz"

- name: Save installed Android SDK package to cache
  command: >
    chroot {{ root_dir }}/root
    tar -czf
    {{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_{{ android_sdk_version }}-{{ android_build_tools_version }}-{{ android_api_version }}.tar.gz
    -C /build android-sdk-linux
  args:
    creates: "{{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_{{ android_sdk_version }}-{{ android_build_tools_version }}-{{ android_api_version }}.tar.gz"

- name: Install Android SDK from cache if not installed
  command: >
    chroot {{ root_dir }}/root
    tar -xzf
    {{ GISLAB_PATH_CACHE }}/packages/tar/android-sdk_{{ android_sdk_version }}-{{ android_build_tools_version }}-{{ android_api_version }}.tar.gz
    -C /build/
  args:
    creates: "{{ android_root }}/tools/android"


# nodeJS
- name: Download NodeJS
  command: >
    chroot {{ root_dir }}/root
    wget {{ wget_opts }} {{ nodejs_url_base }}/v{{ nodejs_version }}/node-v{{ nodejs_version }}-linux-x86.tar.gz
    -O {{ GISLAB_PATH_CACHE }}/packages/tar/node-v{{ nodejs_version }}-linux-x86.tar.gz

- name: Install NodeJS
  command: >
    chroot {{ root_dir }}/root
    tar -xzf
    {{ GISLAB_PATH_CACHE }}/packages/tar/node-v{{ nodejs_version }}-linux-x86.tar.gz
    -C /build/

- name: Rename NodeJS directory
  command: >
    chroot {{ root_dir }}/root
    mv /build/node-v{{ nodejs_version }}-linux-x86 /build/nodejs


# cordova
- name: Install Cordova
  command: >
    chroot {{ root_dir }}/root
    {{ nodejs_root }}/bin/npm install
    --quiet
    --cache={{ GISLAB_PATH_CACHE }}/packages/npm
    --global
    cordova@{{ cordova_version }}


### PACKAGE BUILD
- name: Create GIS.lab Mobile image directory
  file:
    dest: "{{ root_dir }}/image"
    state: directory

- name: Copy GIS.lab Mobile files
  copy:
    src: static/gislab-mobile
    dest: "{{ root_dir }}/root/build/"

- name: Install GIS.lab Mobile configuration file
  template:
    src: config.xml.j2
    dest: "{{ root_dir }}/root{{ gislab_mobile_root }}/config.xml"

- name: Install GIS.lab Mobile build script
  template:
    src: cordova-build.sh.j2
    dest: "{{ root_dir }}/root/build/cordova-build.sh"
    mode: 0755

- name: Build GIS.lab Mobile package
  command: chroot {{ root_dir }}/root /build/cordova-build.sh


- name: Move GIS.lab Mobile package to image directory
  # Cordova is currently not capable to build APK with correct file name in
  # correct directory. It is changing from release to release
  # (see: https://issues.apache.org/jira/browse/CB-7827)
  shell: >
    find {{ root_dir }}/root/build/gislab-mobile
    -name '*-debug.apk'
    -type f
    -exec mv '{}' {{ root_dir }}/image/gislab_mobile.apk \;
  args:
    executable: /bin/bash

- name: Move GIS.lab Mobile build stamp to image directory
  shell: >
    mv
    {{ root_dir }}/root/build/gislab_mobile.buildstamp
    {{ root_dir }}/image/gislab_mobile.buildstamp

- name: Publish GIS.lab Mobile package and build stamp
  file:
    src: "{{ root_dir }}/image/{{ item }}"
    dest: /var/www/default/{{ item }}
    state: link
    force: yes
  with_items:
    - gislab_mobile.apk
    - gislab_mobile.buildstamp


### POST-INSTALLATION CLEANUP
# apt
- name: Deactivate shared apt cache
  command: umount {{ root_dir }}/root/var/cache/apt

- name: Disable Apt cache proxy server
  shell: sed -i "s/^/# /g" {{ root_dir }}/root/etc/apt/apt.conf.d/02proxy


# shared packages cache
- name: Deactivate shared packages cache
  command: umount {{ root_dir }}/root{{ GISLAB_PATH_CACHE }}/packages

- name: Remove mount point for shared packages cache
  file:
    dest: "{{ root_dir }}/root/storage"
    state: absent


# Umount filesystems mounted inside chroot.
# always mount /dev/pts before /proc.
- name: Umount /dev/pts, /proc and packages cache inside chroot
  command: chroot {{ root_dir }}/root umount {{ item }}
  with_items:
    - /dev/pts
    - /proc


- meta: flush_handlers

# vim: set ts=8 sts=2 sw=2 et:
