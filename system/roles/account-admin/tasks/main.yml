---
#
### ADMINISTRATOR USER ACCOUNT ###
#
# Create or update GIS.lab administrator user account 'gislab' with given or
# random password.


- name: Detect if GIS.lab administrator user account is already created
  shell: "id gislab || echo 'GISLAB-DOES-NOT-EXIST'"
  args:
    executable: /bin/bash
  register: admin_account_status
  changed_when: False


- name: Create GIS.lab administrator user account 'gislab' if doesn't exist
  shell: >
    gislab-adduser
    -s
    -g "{{ GISLAB_ADMIN_FIRST_NAME }}"
    -l "{{ GISLAB_ADMIN_SURNAME }} ({{ GISLAB_UNIQUE_ID }})"
    -m "{{ GISLAB_ADMIN_EMAIL }}"
    gislab
  when: admin_account_status.stdout == 'GISLAB-DOES-NOT-EXIST'

- name: Install public SSH key for GIS.lab administrator user account 'gislab'
  shell: "{{ item }}"
  with_items:
    - mkdir -p {{ GISLAB_PATH_HOME }}/gislab/.ssh
    - cp -a
      /home/{{ GISLAB_PROVISIONING_USER }}/.ssh/authorized_keys
      {{ GISLAB_PATH_HOME }}/gislab/.ssh/authorized_keys
    - chmod 700 {{ GISLAB_PATH_HOME }}/gislab/.ssh
    - chmod 600 {{ GISLAB_PATH_HOME }}/gislab/.ssh/authorized_keys
    - chown -R gislab:gislabusers {{ GISLAB_PATH_HOME }}/gislab/.ssh
  when: admin_account_status.stdout == 'GISLAB-DOES-NOT-EXIST'


- name: Update password of GIS.lab administrator user account 'gislab'
  shell: >
    gislab-moduser
    -p "{{ GISLAB_ADMIN_PASSWORD }}"
    gislab
  when: GISLAB_ADMIN_PASSWORD != ""

# vim: set ts=8 sts=2 sw=2 et:
