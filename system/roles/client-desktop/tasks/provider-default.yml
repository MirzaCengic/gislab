---
#
### Build GIS.lab Desktop client for LAN ###
#

- name: Install packages (default provider)
  apt: pkg={{ item }} force=yes install_recommends=no state=latest
  with_items:
    - tftpd-hpa
    - nbd-server
    - python-virtualenv
    - squashfs-tools


# TFTP
- name: Create TFTP directory
  file: dest=/var/lib/tftpboot/gislab state=directory recurse=yes


# NBD
- name: Create NBD configuration directories
  file: dest=/etc/nbd-server/conf.d state=directory recurse=yes

- name: Install NBD configuration files
  template: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "nbd-server/config.j2", dest: "/etc/nbd-server/config" }
    - { src: "nbd-server/gislab.conf.j2", dest: "/etc/nbd-server/conf.d/gislab.conf" }

- name: Install hosts.allow file - enable keepalive option for nbdrootd
  template: src=hosts.allow/hosts.allow.j2 dest=/etc/hosts.allow


# PXE boot
- name: Install syslinux files
  command:  cp {{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/root{{ item.src }} {{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/root{{ item.dest }}
  with_items:
    - { src: "/usr/lib/syslinux/pxelinux.0", dest: "/boot/pxelinux.0" }
    - { src: "/usr/lib/syslinux/gpxelinux.0", dest: "/boot/gpxelinux.0" }

- name: Create PXE boot configuration directory
  file: dest={{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/root/boot/pxelinux.cfg state=directory

- name: Install PXE configuration file
  template: src=pxe-boot/gislab.j2 dest={{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/root/boot/pxelinux.cfg/default

  
# HTTP boot (alternative method using iPXE)
# To boot via HTTP, client machine must boot iPXE boot image first. This boot image will launch HTTP boot.
# Prepared iPXE boot loader image file exists in 'http-boot/gislab-bootloader.iso'.

- name: Install ramdisk and kernel files for HTTP boot
  file: src={{ item.src }} dest={{ item.dest }} owner=root group=root state=link force=yes
  with_items:
    - { src: "/var/lib/tftpboot/gislab/vmlinuz", dest: "/var/www/default/vmlinuz"}
    - { src: "/var/lib/tftpboot/gislab/initrd.img", dest: "/var/www/default/initrd.img"}

- name: Install HTTP boot service requirements in Python virtualenv
  pip: name=gunicorn
       version=19.1.1
       virtualenv={{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/virtualenv/http-boot
       extra_args="--download-cache=/storage/cache/packages/pip"
       virtualenv_site_packages=yes
       state=present
  notify:
    - service gislab-http-boot restart

- name: Create directory for HTTP boot script
  file: dest={{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/http-boot state=directory

- name: Install HTTP boot script
  copy: src=static/http-boot/gislab-http-boot.py dest={{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/http-boot/gislab-http-boot.py
  notify:
    - service gislab-http-boot restart

- name: Install HTTP boot service
  template: src=init/gislab-http-boot.conf.j2 dest=/etc/init/gislab-http-boot.conf
  notify:
    - service gislab-http-boot restart


#
## IMAGE BUILD ########################################################################################################
#

- name: Build GIS.lab client image
  shell: gislab-client-image > /dev/null
  args:
    executable: /bin/bash

- name: Publish GIS.lab client build stamp file
  file: src={{ GISLAB_INSTALL_CLIENTS_ROOT }}/desktop/image/gislab_desktop.buildstamp dest=/var/www/default/gislab_desktop.buildstamp state=link force=yes

# Restart NBD server
- name: Ensure that NBD server is up
  # NBD server is sometimes down after running update (see: https://github.com/imincik/gis-lab/issues/327)
  service: name=nbd-server state=started


- meta: flush_handlers

# vim:ft=ansible:
