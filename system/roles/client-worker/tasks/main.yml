---
#
### GIS.lab WORKER CLIENT ###
#
# Build installation package for OWS worker.
# Purpose of worker client is horizontal scaling of OWS requests processing. This task creates installation package,
# which can be downloaded from GIS.lab server and installed on GIS.lab Desktop client or any other server running
# supported OS.

# Example worker installation:
# $ mkdir -p /tmp/install
# && cd /tmp/install
# && curl --silent http://<GIS.lab server IP>/worker.tar.gz | tar xz
# && bash ./install.sh &> /var/log/gislab-install.log


# System
- name: Flush worker installation directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}" state=absent

- name: Create root worker installation directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}" state=directory

- name: Create worker installation directory for basic configuration
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration" state=directory

- name: Create worker installation directory for worker configuration
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker" state=directory

- name: Install GIS.lab shell functions library
  copy: src=functions.sh dest={{ GISLAB_INSTALL_WORKER_ROOT }}/functions.sh

- name: Install basic configuration installation script
  template: src=basic-configuration.sh.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/install.sh mode=0755

- name: Install worker configuration installation script
  template: src=client-worker.sh.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker/install.sh mode=0755

- name: Install main installation script
  template: src=install.sh.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/install.sh mode=0755


# basic configuration
- name: Create /etc directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc" state=directory

- name: Add GIS.lab ID, version and client build information
  command: cp /etc/gislab_version {{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc

- name: Create directory for services default configuration files
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/default state=directory recurse=yes

# locales
- name: Configure locales
  command: cp --parents /etc/default/locale {{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration

# DNS
- name: Configure DNS
  template: src=resolvconf/resolv.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/resolv.conf

# NTP
- name: Copy NTPdate configuration
  template: src=ntpdate/ntpdate.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/default/ntpdate

# timezone
- name: Copy timezone configuration
  command: cp /etc/timezone {{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/

# apt
- name: Copy apt configuration from server
  command: cp -a /etc/apt {{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/

# NFS configuration
- name: Install idmapd configuration
  template: src=nfs/idmapd.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/idmapd.conf

# statistics
- name: Create directory for munin configuration
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/munin state=directory

- name: Install configuration for munin
  template: src=munin-node/munin-node.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/basic-configuration/etc/munin/munin-node.conf


# syslog
- name: Create directory for syslog configuration
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker/etc/rsyslog.d state=directory

- name: Install syslog configuration file
  template: src=syslog/gislab.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker/etc/rsyslog.d/gislab.conf


# Xvfb
- name: Copy configuration file for X server
  command: cp --parents {{ item }} {{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker
  with_items:
    - /etc/init/xvfb.conf
    - /etc/init.d/xvfb

# mapserver
- name: Copy default web page content
  command: cp --parents /var/www/default/index.html {{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker

- name: Copy configuration files for web server powering QGIS Server
  command: cp --parents {{ item }} {{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker
  with_items:
    - /etc/lighttpd/lighttpd.conf
    - /etc/lighttpd/conf-enabled/10-fastcgi.conf

# serf
- name: Install serf upstart scripts
  template: src={{ item.src }} dest={{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker/{{ item.dest }}
  with_items:
    - { src: "serf/serf.conf.j2", dest: "/etc/init/serf.conf" }
    - { src: "serf/serf-join.conf.j2", dest: "/etc/init/serf-join.conf" }

- name: Create directory for serf scripts
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker/etc/serf/bin state=directory recurse=yes

- name: Install serf scripts
  copy: src=static/serf/ dest={{ GISLAB_INSTALL_WORKER_ROOT }}/client-worker/etc/serf/bin mode=0755


# create image
- name: Create directory for worker image file
  file: dest={{ GISLAB_INSTALL_WORKER_IMAGE }} state=directory recurse=yes

- name: Create worker image file
  command: tar -czf {{ GISLAB_INSTALL_WORKER_IMAGE }}/worker.tar.gz -C {{ GISLAB_INSTALL_WORKER_ROOT }} .

- name: Create symlink for worker image file to webserver root directory
  file: src={{ GISLAB_INSTALL_WORKER_IMAGE }}/worker.tar.gz dest=/var/www/default/worker.tar.gz state=link force=yes


# vim:ft=ansible:
