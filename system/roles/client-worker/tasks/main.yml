---
#
### GIS.lab WORKER CLIENT ###
#
# Install and configure worker client.
# Worker client is useful for OWS services load balancing in environments, where no network boot is available
# (for example in Amazon AWS). Worker client can be installed to basic server instance by downloading installation package
# from GIS.lab server, unpacking it and running installation script. This process can be automatized by running
# following commands (in Amazon AWS add this script to 'cloud-data'):

# $ mkdir -p /tmp/install && cd /tmp/install \
# curl --silent http://%s.5/worker.tar.gz | tar xz \
# bash ./install.sh &> /var/log/gislab-install-worker.log


# System
- name: Flush worker installation directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}" state=absent

- name: Create worker installation directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}" state=directory

- name: Create /etc directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}/etc" state=directory

- name: Install GIS.lab shell functions library
  copy: src=functions.sh dest={{ GISLAB_INSTALL_WORKER_ROOT }}/functions.sh

- name: Install worker installation script
  template: src=install.sh.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/install.sh mode=0755

- name: Add GIS.lab ID, version and client build information
  command: cp /etc/gislab_version {{ GISLAB_INSTALL_WORKER_ROOT }}/etc/gislab_version

- name: Copy SSH public keys
  command: cp /etc/gislab/gislab_ssh_public_key.pub {{ GISLAB_INSTALL_WORKER_ROOT }}/

# syslog
- name: Create directory for syslog configuration
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/rsyslog.d state=directory

- name: Install syslog configuration file
  template: src=syslog/gislab.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/rsyslog.d/gislab.conf

# locales
- name: Configure locales
  command: cp --parents /etc/default/locale {{ GISLAB_INSTALL_WORKER_ROOT }}/

# DNS
- name: Configure DNS
  template: src=resolvconf/resolv.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/resolv.conf

# NTP
- name: Create directory for services default configuration files
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/default state=directory recurse=yes

- name: Copy NTPdate configuration
  template: src=ntpdate/ntpdate.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/default/ntpdate

# timezone
- name: Copy timezone configuration
  command: cp /etc/timezone {{ GISLAB_INSTALL_WORKER_ROOT }}/etc/

# repositories lists
- name: Copy repositories lists
  command: cp --parents /etc/apt/sources.list {{ GISLAB_INSTALL_WORKER_ROOT }}

# apt proxy
- name: Copy apt proxy configuration if exists
  command: cp --parents /etc/apt/apt.conf.d/02proxy {{ GISLAB_INSTALL_WORKER_ROOT }}
  ignore_errors: yes

# NFS configuration
- name: Install idmapd configuration
  template: src=nfs/idmapd.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}//etc/idmapd.conf

- name: Copy configuration for GIS projections
  command: cp -a --parents {{ item }} {{ GISLAB_INSTALL_WORKER_ROOT }}
  with_items:
  - /usr/share/proj
  - /usr/share/gdal

# Xvfb
# to enable more advanced print capabilities in QGIS, we need to launch fake X server
# see: http://hub.qgis.org/issues/9295 and http://www.itopen.it/2014/03/13/qgis-server-setup-notes
- name: Copy configuration file for X server
  command: cp --parents {{ item }} {{ GISLAB_INSTALL_WORKER_ROOT }}
  with_items:
  - /etc/init/xvfb.conf
  - /etc/init.d/xvfb

# mapserver
- name: Copy index.html for mapserver
  command: cp --parents /var/www/default/index.html {{ GISLAB_INSTALL_WORKER_ROOT }}

- name: Copy configuration files for mapserver
  command: cp --parents {{ item }} {{ GISLAB_INSTALL_WORKER_ROOT }}
  with_items:
  - /etc/apache2/ports.conf
  - /etc/apache2/mods-available/fcgid.conf
  - /etc/apache2/sites-available/default
  - /etc/apache2/sites-available/mapserver

# statistics
- name: Create directory for munin configuration
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/munin state=directory

- name: Install configuration for munin
  template: src=munin-node/munin-node.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/munin/munin-node.conf

# serf
- name: Install serf upstart scripts
  template: src={{ item.src }} dest={{ GISLAB_INSTALL_WORKER_ROOT }}{{ item.dest }}
  with_items:
  - { src: "serf/serf.conf.j2", dest: "/etc/init/serf.conf" }
  - { src: "serf/serf-join.conf.j2", dest: "/etc/init/serf-join.conf" }

- name: Create directory for serf scripts
  file: dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/serf/bin state=directory recurse=yes

- name: Install serf scripts
  copy: src=static/serf/ dest={{ GISLAB_INSTALL_WORKER_ROOT }}/etc/serf/bin mode=0755

# create image
- name: Create directory for worker image file
  file: dest={{ GISLAB_INSTALL_WORKER_IMAGE }} state=directory recurse=yes

- name: Create worker image file
  command: tar -czf {{ GISLAB_INSTALL_WORKER_IMAGE }}/worker.tar.gz -C {{ GISLAB_INSTALL_WORKER_ROOT }} .

- name: Create symlink for worker image file to webserver root directory
  file: src={{ GISLAB_INSTALL_WORKER_IMAGE }}/worker.tar.gz dest=/var/www/default/worker.tar.gz state=link force=yes

