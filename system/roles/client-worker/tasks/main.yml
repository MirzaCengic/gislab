---
#
### GIS.lab WORKER CLIENT ###
#
# Install and configure worker client.
# Worker client is useful for OWS services load balancing in environments, where no network boot is available
# (for example in Amazon AWS). Worker client can be installed to basic server instance by downloading installation package
# from GIS.lab server, unpacking it and running installation script. This process can be automatized by running
# following commands (in Amazon AWS add this script to 'cloud-data'):

# $ mkdir -p /tmp/install && cd /tmp/install \
# curl --silent http://%s.5/worker.tar.gz | tar xz \
# bash ./install.sh &> /var/log/gislab-install-worker.log


- name: Stop GIS.lab network machines before updating worker image
  service: name=serf state=stopped


# System
- name: Flush worker installation directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}" state=absent

- name: Create worker installation directory
  file: path="{{ GISLAB_INSTALL_WORKER_ROOT }}" state=directory

- name: Install worker files
  copy: src=static/system/ dest="{{ GISLAB_INSTALL_WORKER_ROOT }}"


# Directories structure
- name: Remove worker image directory if exists
  file: path={{ GISLAB_WORKER_IMAGE_ROOT }} state=absent

- name: Create new worker image directory
  file: path={{ GISLAB_WORKER_IMAGE_ROOT }} state=directory

- name: Create new worker image base directory
  file: path={{ GISLAB_WORKER_IMAGE_BASE }} state=directory


# NTPdate
- name: Create directory for NTPdate files
  file: path={{ GISLAB_INSTALL_WORKER_ROOT }}/ntpdate state=directory

- name: Copy NTPdate configuration
  template: src=ntpdate/ntpdate.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/ntpdate/ntpdate


# Serf
- name: Create directory for Serf files
  file: path={{ GISLAB_INSTALL_WORKER_ROOT }}/serf state=directory

- name: Copy Serf init file
  template: src=serf/serf.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/serf/serf.conf

- name: Copy Serf-join init file
  template: src=serf/serf-join.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/serf/serf-join.conf

- name: Create directory for Serf handler scripts
  file: path={{ GISLAB_INSTALL_WORKER_ROOT }}/serf/bin state=directory


# Munin
- name: Create directory for Munin files
  file: path={{ GISLAB_INSTALL_WORKER_ROOT }}/munin-node state=directory

- name: Copy Munin configuration
  template: src=munin-node/munin-node.conf.j2 dest={{ GISLAB_INSTALL_WORKER_ROOT }}/munin-node/munin-node.conf


- name: Create worker image file
  shell: set -a
         && source /etc/gislab_version
         && GISLAB_WORKER_IMAGE_ROOT={{ GISLAB_WORKER_IMAGE_ROOT }}
         GISLAB_WORKER_IMAGE_BASE={{ GISLAB_WORKER_IMAGE_BASE }}
         GISLAB_WORKER_INSTALL_PACKAGES="{{ GISLAB_WORKER_INSTALL_PACKAGES|join(' ') }}"
         bash {{ GISLAB_INSTALL_WORKER_ROOT }}/install.sh > /var/log/gislab-build-worker.log
  args:
    executable: /bin/bash


- name: Start GIS.lab network machines again
  service: name=serf state=started
