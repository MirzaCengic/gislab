#!/bin/bash

set -e

source /etc/gislab_version
source $GISLAB_ROOT/functions.sh


# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) [OPTIONS] username"
	echo "Create GIS.lab user account. User name can contain only lower case digits and numbers."
	echo -e "\nOPTIONS
	-g first name (required)
	-l last name (required)
	-m email (required)
	-p set password for user. If not given it will be automatically generated.
	-d user description text
	-s add user to 'labadmins' group to allow 'sudo'
	-v add user to 'vpnusers' group to allow user connect to VPN network
	-h display this help
	"
	exit 255
}


# options
GISLAB_USER_PASSWORD=$(pwgen -1 -n 8) # generate password, can be overridden by --password option 

while getopts "d:g:l:m:p:svh" OPTION
do
        case "$OPTION" in
			d) GISLAB_USER_DESC="$OPTARG" ;;
			g) GISLAB_USER_GIVEN_NAME=$OPTARG ;;
			l) GISLAB_USER_SURNAME=$OPTARG ;;
			m) GISLAB_USER_MAIL=$OPTARG ;;
			p) GISLAB_USER_PASSWORD=$OPTARG ;;
			s) SUDO=yes ;;
			v) VPN=yes ;;
			h) usage ;;
			\?) exit 1 ;;
        esac
done
shift $(($OPTIND - 1))
if [ $# -eq 0 ]; then usage; fi

if [ -z "$GISLAB_USER_GIVEN_NAME" -o -z "$GISLAB_USER_SURNAME" -o -z "$GISLAB_USER_MAIL" ]; then
	usage
fi

GISLAB_USER=$1
# sanity checks
if id -u $GISLAB_USER > /dev/null 2>&1; then
	gislab_print_error "User '$GISLAB_USER' already exists"
	exit 1
fi

if ! [[ "$GISLAB_USER" =~ ^[a-z][a-z0-9_]*$ ]]; then
	gislab_print_error "Invalid characters in user name"
	exit 1
fi

if ! [[ "$GISLAB_USER_MAIL" =~ ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$ ]]; then
	gislab_print_error "Invalid e-mail address format"
	exit 1
fi

GISLAB_USER_FULL_NAME="$GISLAB_USER_GIVEN_NAME $GISLAB_USER_SURNAME"


# /etc/skel cleanup
if [ ! -d "/etc/skel.clean" ]; then # create clean 'skel' backup at first run
	cp -a /etc/skel /etc/skel.clean
fi

rm -rf /etc/skel
cp -a /etc/skel.clean /etc/skel


# launch account configuration script
source $GISLAB_INSTALL_ACCOUNT_ROOT/install.sh


# add shared directories
ln -s /mnt/repository /etc/skel/Repository
ln -s /mnt/share /etc/skel/Share
ln -s /mnt/barrel /etc/skel/Barrel

# add temporary file system
ln -s /mnt/temporary /etc/skel/Temporary


# create LDAP account
ldapadduser $GISLAB_USER labusers # LDAP account
chmod go-rwx /home/$GISLAB_USER

# add LDAP user attributes
ldapmodifyuser $GISLAB_USER > /dev/null << EOL
changetype: modify
replace: cn
cn: $GISLAB_USER_FULL_NAME
-
replace: sn
sn: $GISLAB_USER_SURNAME
-
add: givenName
givenName: $GISLAB_USER_GIVEN_NAME
-
add: mail
mail: $GISLAB_USER_MAIL
-
add: gecos
gecos: $GISLAB_USER_FULL_NAME
EOL

if [ -n "$GISLAB_USER_DESC" ]; then
	ldapmodifyuser $GISLAB_USER > /dev/null << EOL
changetype: modify
add: description
description: $GISLAB_USER_DESC
EOL
fi


# allow sudo for user if creating superuser account
if [ "$SUDO" == "yes" ]; then
	ldapaddusertogroup $GISLAB_USER labadmins
fi

# allow user connect to VPN network if requested
if [ "$VPN" == "yes" ]; then
	ldapadd -Z -y /etc/ldapscripts/ldapscripts.passwd -D "cn=admin,dc=gis,dc=lab" > /dev/null << EOL
dn: cn=vpnusers,ou=Groups,dc=gis,dc=lab
changetype: modify
add: member
member: uid=$GISLAB_USER,ou=People,dc=gis,dc=lab
EOL
fi


# set user password
gislab-password -p $GISLAB_USER_PASSWORD $GISLAB_USER


# create PostgreSQL user account
sudo su - postgres -c "createuser --no-superuser --no-createdb --no-createrole $GISLAB_USER" # PostgreSQL account
sudo su - postgres -c "psql -c \"GRANT labusers TO $GISLAB_USER;\""
sudo su - postgres -c "psql -d gislab -c \"CREATE SCHEMA AUTHORIZATION $GISLAB_USER;\""

# add user to the database superusers group if creating superuser account
if [ "$SUDO" == "yes" ]; then
	sudo su - postgres -c "psql -c \"GRANT labadmins TO $GISLAB_USER;\""
fi


# forward system mails to user if creating superuser account
# perform only if this email does not already exist in 'maildrop' (other user account
# can be possibly created with same email address)
ldapsearch_cmd="ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:///"
maildrop_exists=$($ldapsearch_cmd -b "cn=root,ou=MailAliases,dc=gis,dc=lab" "(maildrop=$GISLAB_USER_MAIL)" 2>/dev/null)

if [ "$SUDO" == "yes" -a -f /etc/postfix/sasl_passwd -a -z "$maildrop_exists" ]; then
	ldapadd -Z -y /etc/ldapscripts/ldapscripts.passwd -D "cn=admin,dc=gis,dc=lab" > /dev/null << EOL
dn: cn=root,ou=MailAliases,dc=gis,dc=lab
changetype: modify
add: maildrop
maildrop: $GISLAB_USER_MAIL
EOL
fi


# create shared directories structure
mkdir -p /storage/share/$GISLAB_USER # NFS directory
chown $GISLAB_USER:labusers /storage/share/$GISLAB_USER


# deploy administrator public SSH key
mkdir -p /home/$GISLAB_USER/.ssh
chmod 700 /home/$GISLAB_USER/.ssh
cp /etc/gislab/gislab_ssh_public_key.pub /home/$GISLAB_USER/.ssh/authorized_keys
chown $GISLAB_USER:labusers -R /home/$GISLAB_USER/.ssh


# replace user name and password placeholders with real user values
find /home/$GISLAB_USER -type f -exec sed -i "s/{{ GISLAB_USER }}/$GISLAB_USER/g" "{}" \;
find /home/$GISLAB_USER -type f -exec sed -i "s/{{ GISLAB_USER_PASSWORD }}/$GISLAB_USER_PASSWORD/g" "{}" \;


# run account hooks
for hook in $GISLAB_ROOT/user/plugins/account/*.*; do
	gislab_print_info "Running account hook '$(basename $hook)'"
	GISLAB_ACCOUNT_ACTION="add" GISLAB_USER=$GISLAB_USER $hook
	echo "$(date +'%Y-%m-%d-%T') add $GISLAB_USER" >> /var/lib/gislab/account-hook-$(basename $hook).done
done


# save user credentials to hidden directory in home folder
mkdir -p /home/$GISLAB_USER/.gislab
chmod 700 /home/$GISLAB_USER/.gislab
echo "$GISLAB_USER:$GISLAB_USER_PASSWORD" > /home/$GISLAB_USER/.gislab/gislab_${GISLAB_USER}_credentials.txt
chown $GISLAB_USER:labusers -R /home/$GISLAB_USER/.gislab

if [ "$VPN" == "yes" ]; then
	cp /etc/openvpn/ca.crt /home/$GISLAB_USER/.gislab/gislab_vpn_ca.crt
	chown $GISLAB_USER:labusers /home/$GISLAB_USER/.gislab/gislab_vpn_ca.crt

	cp /etc/openvpn/ta.key /home/$GISLAB_USER/.gislab/gislab_vpn_ta.key
	chown $GISLAB_USER:labusers /home/$GISLAB_USER/.gislab/gislab_vpn_ta.key
	chmod 0600 /home/$GISLAB_USER/.gislab/gislab_vpn_ta.key
fi

gislab_print_info "Account '$GISLAB_USER' created with password '$GISLAB_USER_PASSWORD'"


# vim: set ts=4 sts=4 sw=4 noet:
