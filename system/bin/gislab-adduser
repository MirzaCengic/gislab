#!/bin/bash

set -e


# source configuration files
source /vagrant/config.cfg
if [ -f /vagrant/config-user.cfg ]
then
	source /vagrant/config-user.cfg
fi

source /vagrant/system/functions.sh

# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) [OPTIONS] username"
	echo "Create GIS.lab user account. User name can contain only lower case digits and numbers."
	echo -e "\nOPTIONS
	-g first name (required)
	-l last name (required)
	-m email (required)
	-p set password for user. If not given it will be automatically generated.
	-d user description text
	-s add user to 'labadmins' group to allow 'sudo'
	-h display this help
	"
	exit 255
}


# options
GISLAB_USER_PASSWORD=$(pwgen -1 -n 8) # generate password, can be overriden by --password option 

while getopts "d:g:l:m:p:sh" OPTION
do
        case "$OPTION" in
			d) GISLAB_USER_DESC="$OPTARG" ;;
			g) GISLAB_USER_GIVEN_NAME=$OPTARG ;;
			l) GISLAB_USER_SURNAME=$OPTARG ;;
			m) GISLAB_USER_MAIL=$OPTARG ;;
			p) GISLAB_USER_PASSWORD=$OPTARG ;;
			s) SUDO=yes ;;
			h) usage ;;
			\?) exit 1 ;;
        esac
done
shift $(($OPTIND - 1))
if [ $# -eq 0 ]; then usage; fi

if [ -z "$GISLAB_USER_GIVEN_NAME" -o -z "$GISLAB_USER_SURNAME" -o -z "$GISLAB_USER_MAIL" ]; then
	usage
fi

GISLAB_USER=$1
# sanity checks
if id -u $GISLAB_USER > /dev/null 2>&1; then
	gislab_print_error "User '$GISLAB_USER' already exists"
	exit 1
fi

if ! [[ "$GISLAB_USER" =~ ^[a-z][a-z0-9_]*$ ]]; then
	gislab_print_error "Invalid characters in user name"
	exit 1
fi

if ! [[ "$GISLAB_USER_MAIL" =~ ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$ ]]; then
	gislab_print_error "Invalid e-mail address format"
	exit 1
fi

GISLAB_USER_COMMON_NAME="$GISLAB_USER_GIVEN_NAME $GISLAB_USER_SURNAME"


# /etc/skel update
if [ ! -d "/etc/skel.clean" ]; then # create clean 'skel' backup at first run
	cp -a /etc/skel /etc/skel.clean
fi

rm -rf /etc/skel
cp -a /etc/skel.clean /etc/skel

mkdir /etc/skel/.config
mkdir /etc/skel/.local


# configure menu
mkdir -p /etc/skel/.config/menus
cp /vagrant/system/client/desktop-session/menus/xfce-applications.menu /etc/skel/.config/menus/

mkdir -p /etc/skel/.local/share/applications
cp /vagrant/system/client/desktop-session/menus/*.desktop /etc/skel/.local/share/applications/

mkdir -p /etc/skel/.local/share/desktop-directories
cp /vagrant/system/client/desktop-session/menus/*.directory /etc/skel/.local/share/desktop-directories/


# configure GIS.lab desktop session and panel
mkdir -p /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml

cp /vagrant/system/client/desktop-session/xfce4/xinitrc /etc/skel/.config/xfce4/

cp /vagrant/system/client/desktop-session/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml
cp /vagrant/system/client/desktop-session/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml

mkdir -p /etc/skel/.config/xfce4/panel
cp -a /vagrant/system/client/desktop-session/xfce4/panel/* /etc/skel/.config/xfce4/panel

# confugure keyboard languages
languages="us" # english is always active
variants=""
for lang in ${!GISLAB_CLIENT_LANGUAGES[*]}
do
	languages+=",${GISLAB_CLIENT_LANGUAGES[$lang]}"
	variants+=","
done
sed -i "s/^layouts=/layouts=$languages/" /etc/skel/.config/xfce4/panel/xkb-plugin-14.rc
sed -i "s/^variants=/variants=$variants/" /etc/skel/.config/xfce4/panel/xkb-plugin-14.rc


# Conky
mkdir -p /etc/skel/.config/autostart
cp /vagrant/system/client/desktop-session/conky/conkyrc /etc/skel/.conkyrc
cp /vagrant/system/client/desktop-session/conky/conky.desktop /etc/skel/.config/autostart/conky.desktop


# add shared directories
ln -s /mnt/repository /etc/skel/Repository
ln -s /mnt/share /etc/skel/Share
ln -s /mnt/barrel /etc/skel/Barrel

# add temporary filesystem
ln -s /mnt/temporary /etc/skel/Temporary


# Pidgin
mkdir -p /etc/skel/.purple
cp -a /vagrant/system/client/pidgin/*.xml /etc/skel/.purple
#cp /vagrant/system/client/pidgin/pidgin.desktop /etc/skel/.config/autostart/pidgin.desktop


# PostgreSQL
cp /vagrant/system/client/pgadmin3/pgadmin3 /etc/skel/.pgadmin3


# QGIS
mkdir -p /etc/skel/.config/QGIS
mkdir -p /etc/skel/.qgis2
cp /vagrant/system/client/qgis/QGIS2.conf /etc/skel/.config/QGIS/QGIS2.conf

if [ "$GISLAB_CLIENT_GIS_DEVELOPMENT_SUPPORT" == "yes" ]; then
	mkdir -p /etc/skel/bin
	cp /vagrant/system/client/qgis/bin/gislab-dev-* /etc/skel/bin
	chmod 755 /etc/skel/bin/*
fi


chown -R root:root /etc/skel


# create account
ldapadduser $GISLAB_USER labusers # LDAP account
chmod go-rwx /home/$GISLAB_USER

# add LDAP user attributes
ldapmodifyuser $GISLAB_USER > /dev/null << EOL
changetype: modify
replace: cn
cn: $GISLAB_USER_COMMON_NAME
-
replace: sn
sn: $GISLAB_USER_SURNAME
-
add: givenName
givenName: $GISLAB_USER_GIVEN_NAME
-
add: mail
mail: $GISLAB_USER_MAIL
-
add: gecos
gecos: $GISLAB_USER_COMMON_NAME
EOL

if [ -n "$GISLAB_USER_DESC" ]; then
	ldapmodifyuser $GISLAB_USER > /dev/null << EOL
changetype: modify
add: description
description: $GISLAB_USER_DESC
EOL
fi

# allow sudo for user if creating superuser account
if [ "$SUDO" == "yes" ]; then
	ldapaddusertogroup $GISLAB_USER labadmins
fi

# set user password
gislab-password -p $GISLAB_USER_PASSWORD $GISLAB_USER

sudo su - postgres -c "createuser --no-superuser --no-createdb --no-createrole $GISLAB_USER" # PostgreSQL account
sudo su - postgres -c "psql -c \"GRANT labusers TO $GISLAB_USER;\""
sudo su - postgres -c "psql -d gislab -c \"CREATE SCHEMA AUTHORIZATION $GISLAB_USER;\""

# add user to the database superusers group if creating superuser account
if [ "$SUDO" == "yes" ]; then
	sudo su - postgres -c "psql -c \"GRANT labadmins TO $GISLAB_USER;\""
fi

# forward system mails to user if creating superuser account
if [ "$SUDO" == "yes" -a -n "$GISLAB_SERVER_EMAIL_RELAY_SERVER" \
  -a -n "$GISLAB_SERVER_EMAIL_RELAY_LOGIN" -a -n "$GISLAB_SERVER_EMAIL_RELAY_PASSWORD" ]; then
	sed -i "s/\(.*\)/\1, $GISLAB_USER_MAIL/" /etc/postfix/virtual_regexp
	service postfix reload
fi

mkdir -p /storage/share/$GISLAB_USER # NFS directory
chown $GISLAB_USER:labusers /storage/share/$GISLAB_USER

# copy administrator public SSH key
gislab_provisioning_user # set provisioning user variable
mkdir -p /home/$GISLAB_USER/.ssh
chmod 700 /home/$GISLAB_USER/.ssh
cp /home/$GISLAB_PROVISIONING_USER/.ssh/authorized_keys /home/$GISLAB_USER/.ssh/authorized_keys
chown $GISLAB_USER:labusers -R /home/$GISLAB_USER/.ssh

# replace user name and password placeholders with real user values
find /home/$GISLAB_USER -type f -exec sed -i "s/##GISLAB_USER##/$GISLAB_USER/g" "{}" \;
find /home/$GISLAB_USER -type f -exec sed -i "s/##GISLAB_USER_PASSWORD##/$GISLAB_USER_PASSWORD/g" "{}" \;


# run account hooks
for hook in /vagrant/user/plugins/account/*.*; do
	gislab_print_info "Running account hook '$(basename $hook)'"
	GISLAB_ACCOUNT_ACTION="add" GISLAB_USER=$GISLAB_USER $hook
	echo "$(gislab_config_header)" >> /etc/gislab/account-hook-$(basename $hook).done
done

gislab_print_info "Account '$GISLAB_USER' created with password '$GISLAB_USER_PASSWORD'"


# vim: set ts=4 sts=4 sw=4 noet:
