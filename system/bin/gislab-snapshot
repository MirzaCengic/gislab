#!/bin/bash

set -e

source /etc/gislab_version
source $GISLAB_ROOT/functions.sh

# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) [ -f ] [ -l ] [ -c <comment> ] [ -d <backup> ] [ -r <backup> ]"
	echo "Backup or restore GIS.lab server system (root filesystem)."
	echo -e "\nOPTIONS
	-h  display this help
	-f  force running this command - do not ask before deleting backup or restoring from backup
	-l  print a list of backups
	-c  create system backup (comment is required, allowed characters [a-zA-Z0-9_-], max 12 chars.)
	-d  backup to delete
	-r  backup to restore from
	"
	exit 255
}

print_backups() {
	lvs --noheadings -o lv_name vgmain | grep -E '^[[:space:]]+root_[_0-9]{17}\+.*$'
}

check_backup() {
	test -h /dev/vgmain/$1
}

# options
while getopts "flc:d:r:h" OPTION
do
        case "$OPTION" in
			f) FORCE="yes" ;;
			l) ACTION="list" ;;
			c) ACTION="create"
			   COMMENT="$OPTARG" ;;
			d) ACTION="delete"
			   BACKUP="$OPTARG" ;;
			r) ACTION="restore"
			   BACKUP="$OPTARG" ;;
			h) usage ;;
			\?) exit 1;;
        esac
done

if [ $# -eq 0 ]; then usage; fi

# check if root filesystem is on LVM
if [ -z "$(lvs --version 2>/dev/null)" -a -z "$(mount | grep '^/dev/mapper/vgmain-root on / ')" ]; then
    gislab_print_error "Root filesystem is not using LVM."
fi

boot_backups_dir=/storage/backup/boot
mkdir -p $boot_backups_dir

case "$ACTION" in
	list)
		echo
		print_backups || gislab_print_info "None backups found"
		echo
		;;
	create)
		# check comment characters
		if ! echo "$COMMENT" | grep -qE '^[a-zA-Z0-9_-]{1,12}$'; then
			gislab_print_error "Not allowed characters in comment or length exceed 12 characters"
		fi

		# check numbers of backups
		if [ $(print_backups | wc -l) -ge 3 ]; then
			gislab_print_error "Maximum 3 backups allowed"
		fi

		postfix="$COMMENT"
		date="$(date '+%Y%m%d_%H_%M_%S')"
		sname="root_$date+$postfix"
		boot_backup_dir="$date+$postfix"

		# create snapshot
		lvcreate -n $sname -L 4G -s /dev/vgmain/root

		# backup /boot directory
		mkdir $boot_backups_dir/$boot_backup_dir
		cp -a /boot/* $boot_backups_dir/$boot_backup_dir/

		gislab_print_info "Backup '$sname' successfuly created"
		;;
	delete)
		check_backup "$BACKUP" || gislab_print_error "Backup '$BACKUP' does not exists"

		if [ "$FORCE" != "yes" ]; then
			gislab_print_warning "This command will delete system backup '$BACKUP'"
			echo "Continue ? [ENTER to continue, CTRL-C to cancel]"
			read
		fi

		# delete snapshot
		lvremove -f /dev/vgmain/$BACKUP

		# delete /boot directory backup
		boot_backup_dir="${BACKUP:5}"
		rm -rf $boot_backups_dir/$boot_backup_dir

		gislab_print_info "Backup '$BACKUP' successfuly deleted"
		;;
	restore)
		check_backup "$BACKUP" || gislab_print_error "Backup '$BACKUP' does not exists"

		if [ "$FORCE" != "yes" ]; then
			gislab_print_warning "This command will restore system from backup '$BACKUP'"
			echo "Continue ? [ENTER to continue, CTRL-C to cancel]"
			read
		fi

		# restore system from snapshot
		lvconvert --merge /dev/vgmain/$BACKUP

		# restore /boot directory from backup
		boot_backup_dir="${BACKUP:5}"
		rm -rf /boot/*
		cp -a $boot_backups_dir/$boot_backup_dir/* /boot/
		rm -rf $boot_backups_dir/$boot_backup_dir

		gislab_print_info "System successfuly restored from backup '$BACKUP'"
		gislab_print_warning "Reboot GIS.lab server now to apply changes"
		;;
esac


# vim: set ts=4 sts=4 sw=4 noet:
