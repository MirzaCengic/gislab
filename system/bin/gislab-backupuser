#!/bin/bash

# TODO: backup configuration and data from other apps like Firefox

set -e

source /etc/gislab_version
source $GISLAB_ROOT/functions.sh


# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) username"
	echo "Backup GIS.lab user account."
	echo -e "\nOPTIONS
	-d backup directory (optional, default: /storage/backup)
	-h display this help
	"
	exit 255
}


# options
BACKUP_DIR=/storage/backup

while getopts "d:h" OPTION
do
	case "$OPTION" in
		d) BACKUP_DIR="$OPTARG" ;;
		h) usage ;;
		\?) exit 1 ;;
	esac
done
shift $(($OPTIND - 1))
if [ $# -eq 0 ]; then usage; fi

GISLAB_USER=$1


# sanity checks
if ! id $GISLAB_USER >/dev/null 2>&1; then
	gislab_print_error "GIS.lab user '$GISLAB_USER' does not exists"
	exit 1
fi


# populate variables and prepare directories structure
DATE=$(date '+%Y-%m-%d:%H-%M-%S')
GISLAB_USER_HOME=/storage/home/$GISLAB_USER

TEMP_BACKUP_DIR=/tmp/gislab-$GISLAB_USER-$DATE
HOME_BACKUP_FILE=$TEMP_BACKUP_DIR/home.tar
PUBLISH_BACKUP_FILE=$TEMP_BACKUP_DIR/publish.tar.bz2
DB_BACKUP_FILE=$TEMP_BACKUP_DIR/postgresql.dump
LDAP_BACKUP_FILE=$TEMP_BACKUP_DIR/ldap.dump
BACKUP_FILE=$BACKUP_DIR/gislab-$GISLAB_USER-$DATE.tar

mkdir -p $BACKUP_DIR
chmod 700 $BACKUP_DIR

mkdir $TEMP_BACKUP_DIR


# GIS.lab VERSION
echo $GISLAB_VERSION > $TEMP_BACKUP_DIR/GISLAB_VERSION


# HOME DIRECTORY
# load home directory names from XDG
if [ -f $GISLAB_USER_HOME/.config/user-dirs.dirs ]; then
	source $GISLAB_USER_HOME/.config/user-dirs.dirs
	EXCLUDE=" --exclude=$GISLAB_USER_HOME/$(basename $XDG_DOWNLOAD_DIR)"
fi

tar -cvf $HOME_BACKUP_FILE \
	--exclude="$GISLAB_USER_HOME/.*" \
	--exclude=$GISLAB_USER_HOME/Barrel \
	--exclude=$GISLAB_USER_HOME/Booster \
	--exclude=$GISLAB_USER_HOME/Publish \
	--exclude=$GISLAB_USER_HOME/Repository $EXCLUDE $GISLAB_USER_HOME

if ls $GISLAB_USER_HOME/.config/user-dirs.* >/dev/null 2>&1; then
	tar -rf $HOME_BACKUP_FILE $GISLAB_USER_HOME/.config/user-dirs.*
fi

# QGIS
if ls $GISLAB_USER_HOME/.config/QGIS/QGIS2.conf >/dev/null 2>&1; then
	tar -rf $HOME_BACKUP_FILE $GISLAB_USER_HOME/.config/QGIS/QGIS2.conf
fi

if ls $GISLAB_USER_HOME/.qgis2/*.db >/dev/null 2>&1; then
	tar -rf $HOME_BACKUP_FILE $GISLAB_USER_HOME/.qgis2/*.db
fi

# GRASS
if ls $GISLAB_USER_HOME/.grass7 >/dev/null 2>&1; then
	tar -rf $HOME_BACKUP_FILE $GISLAB_USER_HOME/.grass7
fi

if ls $GISLAB_USER_HOME/.grassdata >/dev/null 2>&1; then
	tar -rf $HOME_BACKUP_FILE $GISLAB_USER_HOME/.grassdata
fi

bzip2 $HOME_BACKUP_FILE


# PUBLISHED PROJECTS
tar -cjf $PUBLISH_BACKUP_FILE /storage/publish/$GISLAB_USER


# DATABASE DATA
cd $TEMP_BACKUP_DIR # leave root's home dir before sudo to postgres

psql -U postgres -d gislab -c "DROP TABLE IF EXISTS ${GISLAB_USER}.gislab_ball;" > /dev/null
psql -U postgres -d gislab -c "DROP TABLE IF EXISTS ${GISLAB_USER}.gislab_drawing;" > /dev/null

# include data from GIS.lab Web client only if client is installed
ball_exist_sql="SELECT 1 FROM information_schema.tables WHERE table_name = 'storage_ball'"
if [[ $(psql -U postgres -d gislab -tAc "$ball_exist_sql") == "1" ]]; then
	psql -U postgres -d gislab -c "CREATE TABLE ${GISLAB_USER}.gislab_ball AS SELECT * FROM storage_ball WHERE \"user\" = '$GISLAB_USER';"
	psql -U postgres -d gislab -c "CREATE TABLE ${GISLAB_USER}.gislab_drawing AS SELECT * FROM storage_drawing WHERE \"user\" = '$GISLAB_USER';"
fi

pg_dump -U postgres -Fc --schema=$GISLAB_USER gislab > $DB_BACKUP_FILE # perform backup
psql -U postgres -d gislab -c "DROP TABLE IF EXISTS ${GISLAB_USER}.gislab_ball;" > /dev/null
psql -U postgres -d gislab -c "DROP TABLE IF EXISTS ${GISLAB_USER}.gislab_drawing;" > /dev/null


# LDAP DATA
ldapfinger -u $GISLAB_USER > $LDAP_BACKUP_FILE
id $GISLAB_USER | grep -q '(gislabadmins)' && echo "#superuser" >> $LDAP_BACKUP_FILE  # superuser permissions


# create backup file and clean up
cd $TEMP_BACKUP_DIR
tar -cf $BACKUP_FILE *
chmod 400 $BACKUP_FILE

rm -rf $TEMP_BACKUP_DIR


gislab_print_info "Backup of account '$GISLAB_USER' created in '$BACKUP_FILE'"


# vim: set ts=4 sts=4 sw=4 noet:
