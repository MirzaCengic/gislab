#!/bin/bash
# Author: Ivan Mincik, ivan.mincik@gmail.com

set -e


# source configuration files
source /vagrant/config.cfg
if [ -f /vagrant/config-user.cfg ]
then
	source /vagrant/config-user.cfg
fi

source /usr/local/gislab/functions.sh

# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) [OPTIONS]"
	echo "Print important runtime GIS.lab server logs in real time."
	echo "Hit [CTRL-C] to exit!"
	echo -e "\nOPTIONS
	-n  number of lines to display from each log file on start (default 1)
	-s  print system and authentication logs
	-b  print dns service logs
	-e  print email service logs
	-d  print database service logs
	-m  print mapserver service logs
	-w  print web services error logs
	-W  print web services access and error logs
	-c  print chat service logs 
	-h  display this help
	"
	exit 255
}


# options
LOGLINES=1
while getopts "n:sbedmwWch" OPTION
do
        case "$OPTION" in
			n) LOGLINES="$OPTARG" ;;
			s) SYSTEM="yes" ;;
			b) DNS="yes";;
			e) EMAIL="yes" ;;
			d) DATABASE="yes" ;;
			m) MAPSERVER="yes" ;;
			w) WEB="yes" ;;
			W) WEB_ACCESS="yes" ;;
			c) CHAT="yes" ;;
			h) usage ;;
			\?) exit 1 ;;
        esac
done
shift $(($OPTIND - 1))


# log files of services in production mode
if [ "$GISLAB_DEBUG_SERVICES" == "no" ]; then
	LOGFILES_SYSTEM="
		/var/log/syslog
		/var/log/auth.log

		/var/log/dhcpd-error.log
		/var/log/ldap-error.log
	"

	LOGFILES_DNS="
		/var/log/named-error.log
	"
	
	LOGFILES_EMAIL="
		/var/log/mail-error.log
	"

	LOGFILES_DATABASE="
		/var/log/postgresql/postgresql-error.log
	"

	LOGFILES_MAPSERVER="
		/var/log/apache2/mapserver-error.log
		/var/log/apache2/mapserver-access.log 
	"

	LOGFILES_WEB="
		/var/log/apache2/error.log
		/var/log/nginx/error.log
		/var/log/nginx/webgis-error.log
		/var/log/webgis-error.log
	"

# log files of services in debug mode
else
	LOGFILES_SYSTEM="
		/var/log/syslog
		/var/log/auth.log

		/var/log/dhcpd-debug.log
		/var/log/named/named-debug.log
		/var/log/ldap-debug.log
	"

	LOGFILES_DNS="
		/var/log/named-debug.log
	"

	LOGFILES_EMAIL="
		/var/log/mail-debug.log
	"

	LOGFILES_DATABASE="
		/var/log/postgresql/postgresql-debug.log
	"

	LOGFILES_MAPSERVER="
		/var/log/apache2/mapserver-error.log
		/var/log/apache2/mapserver-access.log 
	"

	LOGFILES_WEB="
		/var/log/apache2/error.log
		/var/log/nginx/error.log
		/var/log/nginx/webgis-error.log
		/var/log/webgis-debug.log
	"

fi

# chat log file
LOGFILES_CHAT="
	/var/log/ircd/ircd-hybrid.log
"

# web services access log files
LOGFILES_WEB_ACCESS="
	/var/log/apache2/access.log
	/var/log/nginx/access.log
	/var/log/nginx/webgis-access.log 
"


# collect log files
LOGFILES=""
if [ "$SYSTEM" == "yes" ]; then
	LOGFILES+=$LOGFILES_SYSTEM
fi
if [ "$DNS" == "yes" ]; then
	LOGFILES+=$LOGFILES_DNS
fi
if [ "$EMAIL" == "yes" ]; then
	LOGFILES+=$LOGFILES_EMAIL
fi
if [ "$DATABASE" == "yes" ]; then
	LOGFILES+=$LOGFILES_DATABASE
fi
if [ "$MAPSERVER" == "yes" ]; then
	LOGFILES+=$LOGFILES_MAPSERVER
fi
if [ "$WEB" == "yes" ]; then
	LOGFILES+=$LOGFILES_WEB
fi
if [ "$WEB_ACCESS" == "yes" ]; then
	LOGFILES+=$LOGFILES_WEB
	LOGFILES+=$LOGFILES_WEB_ACCESS
fi
if [ "$CHAT" == "yes" ]; then
	LOGFILES+=$LOGFILES_CHAT
fi


# print logs
tail -n $LOGLINES -f $LOGFILES


# vim: set ts=4 sts=4 sw=4 noet:
