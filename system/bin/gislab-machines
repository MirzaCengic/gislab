#!/bin/bash

set -e

source /etc/gislab_version
source $GISLAB_ROOT/functions.sh

# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) [OPTIONS] comma-separated-MAC-list"
	echo "Add or remove GIS.lab client machines specified as list of MAC addresses."
	echo -e "\nOPTIONS
	-h  display this help
	-l  list currently enabled machines
	-a  add machines
	-r  remove machines
	"
	exit 255
}


# options
while getopts "larh" OPTION
do
        case "$OPTION" in
			l) ACTION="list" ;;
			a) ACTION="add" ;;
			r) ACTION="remove" ;;
			h) usage ;;
			\?) exit 1;;
        esac
done
shift $(($OPTIND - 1))
if [ $# -eq 0 -a "$ACTION" != "list" ]; then usage; fi


# LIST
if [ "$ACTION" == "list" ]; then
	echo -e "List of currently enabled machines:"
	grep "hardware ethernet" /etc/gislab/gislab_machines_allowed.conf

# ADD
elif [ "$ACTION" == "add" ]; then
	IFS=', ' read -a maclist <<< "$1"

	# remove closing bracket of MACs list
	sed -i '/^}/ d' /etc/gislab/gislab_machines_allowed.conf

	for mac in "${maclist[@]}"
	do
		echo "Adding MAC $mac"
		hostname=$(echo $mac | sed 's/://g')
		sed -i "/hardware ethernet $mac/ d" /etc/gislab/gislab_machines_allowed.conf # avoid duplicate records
		echo -e "  host $hostname { hardware ethernet $mac; }"  >> /etc/gislab/gislab_machines_allowed.conf
	done

	# re-create closing bracket of MACs list
	echo "}" >> /etc/gislab/gislab_machines_allowed.conf

	service isc-dhcp-server restart
	gislab_print_info "Machines added successfully"

# REMOVE
elif [ "$ACTION" == "remove" ]; then 
	IFS=', ' read -a maclist <<< "$1"
	for mac in "${maclist[@]}"
	do
		echo "Removing MAC $mac"
		hostname=$(echo $mac | sed 's/://g')
		sed -i "/hardware ethernet $mac/ d" /etc/gislab/gislab_machines_allowed.conf
	done

	service isc-dhcp-server restart
	gislab_print_info "Machines removed successfully"
fi


# vim: set ts=4 sts=4 sw=4 noet:
