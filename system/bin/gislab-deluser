#!/bin/bash

set -e

source $GISLAB_ROOT/functions.sh


# require root privileges
gislab_require_root


# usage
function usage() {
	echo "USAGE: $(basename $0) [OPTIONS] username"
	echo "Delete GIS.lab user account."
	echo -e "\nOPTIONS
	-b  backup user data
	-f  force running this command - do not ask before deleting account
	-h  display this help
	"
	exit 255
}


# options
FORCE="no"
while getopts "bhf" OPTION
do
        case "$OPTION" in
			b) BACKUP="yes" ;;
			f) FORCE="yes" ;;
			h) usage ;;
			\?) exit 1;;
        esac
done
shift $(($OPTIND - 1))
if [ $# -eq 0 ]; then usage; fi

GISLAB_USER=$1

if ! id $GISLAB_USER >/dev/null 2>&1; then
	gislab_print_error "GIS.lab user '$GISLAB_USER' does not exists"
	echo
	exit 1
fi

if [ "$FORCE" != "yes" ]; then
	gislab_print_warning "This command will completely remove user account '$GISLAB_USER' including all data"
	echo "Continue ? [ENTER to continue, CTRL-C to cancel]"
	read
fi

if [ "$BACKUP" == "yes" ]; then
	gislab-backupuser $GISLAB_USER
fi


# remove account
# delete home
GISLAB_USER_HOME=$(getent passwd $GISLAB_USER | awk -F: '{ print $6 }')

if [ -d "$GISLAB_USER_HOME" ]; then
	rm -rf $GISLAB_USER_HOME
fi

# disable forwarding system mails to user if user was superuser
ldapsearch_cmd="ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:///"
GISLAB_USER_MAIL=$($ldapsearch_cmd "uid=$GISLAB_USER" mail 2>/dev/null | awk '/^mail: / { print $2 }')

if id $GISLAB_USER 2>/dev/null | grep -q '(labadmins)'; then
	if [ -n "$($ldapsearch_cmd -b "cn=root,ou=MailAliases,dc=gis,dc=lab" "(maildrop=$GISLAB_USER_MAIL)" 2>/dev/null)" ]; then
		ldapadd -Z -y /etc/ldapscripts/ldapscripts.passwd -D "cn=admin,dc=gis,dc=lab" > /dev/null << EOL
dn: cn=root,ou=MailAliases,dc=gis,dc=lab
changetype: modify
delete: maildrop
maildrop: $GISLAB_USER_MAIL
EOL
	fi
fi

# remove user from 'vpnusers' group
ldapadd -Z -y /etc/ldapscripts/ldapscripts.passwd -D "cn=admin,dc=gis,dc=lab" > /dev/null << EOL
dn: cn=vpnusers,ou=Groups,dc=gis,dc=lab
changetype: modify
delete: member
member: uid=$GISLAB_USER,ou=People,dc=gis,dc=lab
EOL

# manunaly delete user from additional groups (bug https://bugs.launchpad.net/ubuntu/+source/ldapscripts/+bug/1292143)
for GROUP in $(id -nG $GISLAB_USER | grep '[[:space:]]' | sed -r 's/^[^ ]* //'); do
	ldapdeleteuserfromgroup $GISLAB_USER $GROUP
done

ldapdeleteuser $GISLAB_USER # LDAP account

sudo su - postgres -c "psql -d gislab -c \"DROP SCHEMA $GISLAB_USER CASCADE\"" # PostgreSQL account
sudo su - postgres -c "psql -d gislab -c \"DROP OWNED BY $GISLAB_USER CASCADE\""
sudo su - postgres -c "dropuser $GISLAB_USER"

rm -rf /storage/share/$GISLAB_USER # NFS directory


# run account hooks
for hook in $GISLAB_ROOT/user/plugins/account/*.*; do
	gislab_print_info "Running account hooks '$(basename $hook)'"
	GISLAB_ACCOUNT_ACTION="remove" GISLAB_USER=$GISLAB_USER $hook
	echo "$(date +'%Y-%m-%d-%T') remove $GISLAB_USER" >> /var/lib/gislab/account-hook-$(basename $hook).done
done

gislab_print_info "Account '$GISLAB_USER' removed"


# vim: set ts=4 sts=4 sw=4 noet:
