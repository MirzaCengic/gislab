#
###  LDAP DATABASE ###
#

# configure PAM
pam-auth-update --force
auth-client-config -t nss -p lac_ldap

cat << EOF > /etc/ldap.conf
$(gislab_config_header)
base dc=gis,dc=lab
uri ldapi:///
ldap_version 3
pam_password md5
ssl start_tls
tls_checkpeer no
nss_initgroups_ignoreusers backup,bin,bind,daemon,dhcpd,games,gnats,irc,landscape,libuuid,list,logcheck,lp,mail,man,messagebus,nbd,news,ntp,openldap,postfix,postgres,proxy,puppet,root,sshd,statd,sync,sys,syslog,tftp,uucp,whoopsie,www-data
EOF


# configure base DN and URI and disable certificates verification
cat << EOF > /etc/ldap/ldap.conf
$(gislab_config_header)
BASE dc=gis,dc=lab
URI ldapi:///
TLS_REQCERT never
SUDOERS_BASE ou=SUDOers,dc=gis,dc=lab
EOF


# configure nsswitch
cat << EOF > /etc/nsswitch.conf
$(gislab_config_header)
passwd: files ldap
group: files ldap
shadow: files ldap

hosts:          files myhostname dns
networks:       files
protocols:      db files
services:       db files
ethers:         db files
rpc:            db files

netgroup: nis
sudoers: files ldap
EOF


# configure ldapscripts
cat << EOF > /etc/ldapscripts/ldapscripts.conf
$(gislab_config_header)
SERVER="ldapi:///"
SUFFIX="dc=gis,dc=lab"
GSUFFIX="ou=groups"
USUFFIX="ou=people"
SASLAUTH=""
BINDDN="cn=admin,dc=gis,dc=lab"
BINDPWDFILE="/etc/ldapscripts/ldapscripts.passwd"
GIDSTART="3000"
UIDSTART="3000"
GCLASS="posixGroup"
CREATEHOMES="yes"
HOMESKEL="/etc/skel"
HOMEPERMS="700"
PASSWORDGEN="pwgen"
RECORDPASSWORDS="no"
PASSWORDFILE="/var/log/ldapscripts_passwd.log"
LOGFILE="/var/log/ldapscripts.log"
TMPDIR="/tmp"
LDAPSEARCHBIN="/usr/bin/ldapsearch"
LDAPADDBIN="/usr/bin/ldapadd"
LDAPDELETEBIN="/usr/bin/ldapdelete"
LDAPMODIFYBIN="/usr/bin/ldapmodify"
LDAPMODRDNBIN="/usr/bin/ldapmodrdn"
LDAPPASSWDBIN="/usr/bin/ldappasswd"
GETENTPWCMD=""
GETENTGRCMD=""
GTEMPLATE="/etc/ldapscripts/addgroup.template"
UTEMPLATE="/etc/ldapscripts/adduser.template"
MTEMPLATE=""

EOF


# skip on upgrade
if [ -f "/etc/gislab/045-service-ldap.done" ]; then return; fi


# generate and set LDAP admin password
# generally we don't need to know it, but we can
# find it in '/etc/ldapscripts/ldapscripts.passwd'
LDAP_ADMIN_PASS=$(pwgen -s -N 1 10)
LDAP_ADMIN_PASS_HASH=$(slappasswd -s $LDAP_ADMIN_PASS -h {SSHA})

ldapmodify -Q -Y EXTERNAL -H ldapi:/// << EOL
dn: olcDatabase={1}hdb,cn=config
replace: olcRootPW
olcRootPW: $LDAP_ADMIN_PASS_HASH
EOL

echo -n "$LDAP_ADMIN_PASS" > /etc/ldapscripts/ldapscripts.passwd
chmod 0600 /etc/ldapscripts/ldapscripts.passwd


# enable extended logging in debug mode
if [ "$GISLAB_DEBUG_SERVICES" == "yes" ]; then
	ldapmodify -Q -Y EXTERNAL -H ldapi:/// << EOL
dn: cn=config
changetype: modify
add: olcLogLevel
olcLogLevel: stats
EOL
fi


# secure LDAP with TLS
certtool --generate-privkey > /etc/ssl/private/cakey.pem

cat << EOL > /etc/ssl/ca.info
$(gislab_config_header)
cn = GIS.lab
ca
cert_signing_key
EOL

certtool --generate-self-signed \
--load-privkey /etc/ssl/private/cakey.pem \
--template /etc/ssl/ca.info \
--outfile /etc/ssl/certs/cacert.pem

certtool --generate-privkey \
--bits 1024 \
--outfile /etc/ssl/private/$(hostname)_slapd_key.pem

cat << EOL > /etc/ssl/$(hostname).info
$(gislab_config_header)
organization = GIS.lab
cn = $(hostname -f)
tls_www_server
encryption_key
signing_key
expiration_days = 3650
EOL

certtool --generate-certificate \
--load-privkey /etc/ssl/private/$(hostname)_slapd_key.pem \
--load-ca-certificate /etc/ssl/certs/cacert.pem \
--load-ca-privkey /etc/ssl/private/cakey.pem \
--template /etc/ssl/$(hostname).info \
--outfile /etc/ssl/certs/$(hostname)_slapd_cert.pem

ldapmodify -Q -Y EXTERNAL -H ldapi:/// << EOL
dn: cn=config
add: olcTLSCACertificateFile
olcTLSCACertificateFile: /etc/ssl/certs/cacert.pem
-
add: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ssl/certs/$(hostname)_slapd_cert.pem
-
add: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ssl/private/$(hostname)_slapd_key.pem
EOL

adduser openldap ssl-cert
chgrp ssl-cert /etc/ssl/private/$(hostname)_slapd_key.pem
chmod g+r /etc/ssl/private/$(hostname)_slapd_key.pem
chmod o-r /etc/ssl/private/$(hostname)_slapd_key.pem


# allow only encrypted connection
ldapmodify -Q -Y EXTERNAL -H ldapi:/// << EOL
dn: cn=config
changetype: modify
add: olcSecurity
olcSecurity: ssf=64
EOL


# add support for sudo
export DEBIAN_FRONTEND=noninteractive
export SUDO_FORCE_REMOVE=yes
apt-get -y install sudo-ldap
export SUDO_FORCE_REMOVE=no

ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /vagrant/system/server/ldap/sudo.schema


# create indexes
ldapmodify -Q -Y EXTERNAL -H ldapi:/// << EOL
dn: olcDatabase={1}hdb,cn=config
add: olcDbIndex
olcDbIndex: default eq,sub
-
add: olcDbIndex
olcDbIndex: cn,sn,uid,mail,gn pres,eq,sub,subany
-
add: olcDbIndex
olcDbIndex: dc,ou eq
-
add: olcDbIndex
olcDbIndex: uidNumber,gidNumber eq
-
add: olcDbIndex
olcDbIndex: memberUid eq,pres,sub
-
add: olcDbIndex
olcDbIndex: displayName pres,sub,eq
-
add: olcDbIndex
olcDbIndex: uniqueMember pres,eq
-
add: olcDbIndex
olcDbIndex: sudoUser eq,sub,subany
EOL


# create templates for users and groups
cat << EOL > /etc/ldapscripts/adduser.template
dn: uid=<user>,<usuffix>,<suffix>
objectClass: inetOrgPerson
objectClass: posixAccount
objectClass: shadowAccount
uid: <user>
cn: <user>
sn: <user>
uidNumber: <uid>
gidNumber: <gid>
homeDirectory: <home>
loginShell: <shell>
EOL

cat << EOL > /etc/ldapscripts/addgroup.template
dn: cn=<group>,<gsuffix>,<suffix>
objectClass: posixGroup
cn: <group>
gidNumber: <gid>
description: GIS.lab Group
EOL


# fix ldapscripts runtime script (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=719295)
sed -i "s/^\[ -z \"\$USER\" \] && end_die 'Could not guess current user'$/\[ -n \"\$USER\" \] || USER=\$\(id -un 2>\/dev\/null\)/" /usr/share/ldapscripts/runtime


# restart service
service slapd restart


# create base GIS.lab LDAP structure
ldapadd -Z -w $LDAP_ADMIN_PASS -D "cn=admin,dc=gis,dc=lab" << EOL
dn: ou=People,dc=gis,dc=lab
objectClass: organizationalUnit
ou: people

dn: ou=Groups,dc=gis,dc=lab
objectClass: organizationalUnit
ou: groups

dn: ou=SUDOers,dc=gis,dc=lab
objectClass: top
objectClass: organizationalUnit
ou: SUDOers

dn: cn=defaults,ou=SUDOers,dc=gis,dc=lab
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
sudoOption: secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/vagrant/system/bin:"

dn: cn=%labadmins,ou=SUDOers,dc=gis,dc=lab
objectClass: top
objectClass: sudoRole
cn: %labadmins
sudoUser: %labadmins
sudoHost: ALL
sudoCommand: ALL
sudoOption: !authenticate

dn: cn=labadmins,ou=Groups,dc=gis,dc=lab
objectClass: posixGroup
cn: labadmins
gidNumber: 3000
description: GIS.lab Admins Group

dn: cn=labusers,ou=Groups,dc=gis,dc=lab
objectClass: posixGroup
cn: labusers
gidNumber: 3001
description: GIS.lab Users Group
EOL

unset LDAP_ADMIN_PASS


# vim: set syntax=sh ts=4 sts=4 sw=4 noet:
