#
### DATABASE SERVER - POSTGRESQL/POSTGIS ###
#

# do not run on upgrade
if [ "$GISLAB_INSTALLATION_DONE" == "yes" ]; then
	return
fi


# set system shmmax value which must be something little bit higher than one fourth of
# system memory size
shmmax=$(echo $(free -b | awk '/^Mem:/{print $2}') / 3.9 | bc)
sysctl -w kernel.shmmax=$shmmax
sed -i "s/^#kernel.shmmax =.*/kernel.shmmax = $shmmax/" /etc/sysctl.d/30-postgresql-shm.conf

# tune database depending on current server configuration
pgtune -T Mixed -i /etc/postgresql/9.1/main/postgresql.conf -o /etc/postgresql/9.1/main/postgresql.conf

# allow network connections and local connection without password
sed -i "s/^#listen_addresses.*/listen_addresses = '*'/" /etc/postgresql/9.1/main/postgresql.conf
sed -i "s/local.*all.*all.*peer/local  all  all  trust/" /etc/postgresql/9.1/main/pg_hba.conf
sed -i "s/host.*all.*all.*127.0.0.1\/32.*md5/host  all  all  0.0.0.0\/0 ldap ldapserver=server.gis.lab ldaptls=1 ldapprefix=\"uid=\" ldapsuffix=\",ou=People,dc=gis,dc=lab\"/" /etc/postgresql/9.1/main/pg_hba.conf

# set search path
sed -i "s/^#search_path.*/search_path = '\"\$user\",public'/" /etc/postgresql/9.1/main/postgresql.conf

service postgresql restart

# create labusers and labadmins group
sudo su - postgres -c "createuser --no-superuser --no-createdb --no-createrole --no-login labusers"
sudo su - postgres -c "createuser --superuser --createdb --createrole --no-login labadmins"

# create template database
sudo su - postgres -c "createdb -E UTF8 -T template0 template_postgis"
sudo su - postgres -c "psql -d template_postgis -c \"CREATE EXTENSION postgis;\""
sudo su - postgres -c "psql -d template_postgis -c \"CREATE EXTENSION postgis_topology;\""

sudo su - postgres -c "psql -d template_postgis -c \"REVOKE ALL ON SCHEMA public FROM PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT USAGE ON SCHEMA public TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT ALL ON SCHEMA public TO postgres;\""

sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON geometry_columns TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON geography_columns TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON spatial_ref_sys TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT USAGE ON SCHEMA topology TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON layer TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON topology TO PUBLIC;\""

# add postgresql-comparator support
sudo su - postgres -c "psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/pgc_checksum.sql"
sudo su - postgres -c "psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/pgc_casts.sql"
sudo su - postgres -c "psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/xor_aggregate.sql"

# adding additional projections support
sudo su - postgres -c "psql -d template_postgis -f /vagrant/user/projections/*-postgis.sql"

sudo su - postgres -c "psql -d template_postgis -c \"VACUUM FULL;\""
sudo su - postgres -c "psql -d template_postgis -c \"VACUUM FREEZE;\""
sudo su - postgres -c "psql -d postgres -c \"UPDATE pg_database SET datistemplate='true' WHERE datname='template_postgis';\""
sudo su - postgres -c "psql -d postgres -c \"UPDATE pg_database SET datallowconn='false' WHERE datname='template_postgis';\""

# create gislab database
sudo su - postgres -c "createdb -T template_postgis gislab"
sudo su - postgres -c "psql -c \"GRANT CONNECT ON DATABASE gislab TO labusers;\""


# vim: set syntax=sh ts=4 sts=4 sw=4 noet:
