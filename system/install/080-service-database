#
### DATABASE SERVER - POSTGRESQL/POSTGIS ###
#

# set system shmmax value which must be something little bit higher than one fourth of
# system memory size
shmmax=$(echo $(free -b | awk '/^Mem:/{print $2}') / 3.5 | bc)
sysctl -w kernel.shmmax=$shmmax
cat << EOF > /etc/sysctl.d/30-postgresql-shm.conf
kernel.shmmax = $shmmax
EOF

# allow network connections - listen_addresses = '*'
# and set search path to user schema as first - search_path = '"$user",public' .
# all other settings are default values taken from postgresql.conf.
cat << EOF > /etc/postgresql/9.1/main/postgresql.conf
data_directory = '/var/lib/postgresql/9.1/main'
hba_file = '/etc/postgresql/9.1/main/pg_hba.conf'
ident_file = '/etc/postgresql/9.1/main/pg_ident.conf'
external_pid_file = '/var/run/postgresql/9.1-main.pid'
listen_addresses = '*'
port = 5432
unix_socket_directory = '/var/run/postgresql'
ssl = true
log_line_prefix = '%t '
search_path = '"\$user",public'
datestyle = 'iso, mdy'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'
EOF

# tune database depending on current server configuration
pgtune -T Mixed -i /etc/postgresql/9.1/main/postgresql.conf -o /etc/postgresql/9.1/main/postgresql.conf

# configure access policy
cat << EOF > /etc/postgresql/9.1/main/pg_hba.conf
local  all  postgres  peer
local  all  all  trust
host   all  all  0.0.0.0/0 ldap ldapserver=server.gis.lab ldaptls=1 ldapprefix="uid=" ldapsuffix=",ou=People,dc=gis,dc=lab"
EOF

service postgresql restart


# do not continue on upgrade
if [ "$GISLAB_INSTALLATION_DONE" == "yes" ]; then return; fi

# create labusers and labadmins group
sudo su - postgres -c "createuser --no-superuser --no-createdb --no-createrole --no-login labusers"
sudo su - postgres -c "createuser --superuser --createdb --createrole --no-login labadmins"

# create template database
sudo su - postgres -c "createdb -E UTF8 -T template0 template_postgis"
sudo su - postgres -c "psql -d template_postgis -c \"CREATE EXTENSION postgis;\""
sudo su - postgres -c "psql -d template_postgis -c \"CREATE EXTENSION postgis_topology;\""

sudo su - postgres -c "psql -d template_postgis -c \"REVOKE ALL ON SCHEMA public FROM PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT USAGE ON SCHEMA public TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT ALL ON SCHEMA public TO postgres;\""

sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON geometry_columns TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON geography_columns TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON spatial_ref_sys TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT USAGE ON SCHEMA topology TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON layer TO PUBLIC;\""
sudo su - postgres -c "psql -d template_postgis -c \"GRANT SELECT, UPDATE, INSERT, DELETE ON topology TO PUBLIC;\""

# add postgresql-comparator support
sudo su - postgres -c "psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/pgc_checksum.sql"
sudo su - postgres -c "psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/pgc_casts.sql"
sudo su - postgres -c "psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/xor_aggregate.sql"

# add history audit support (run SELECT audit.audit_table('<schema>.<table>'); to enable)
sudo su - postgres -c "psql -d template_postgis -f /vagrant/system/server/postgresql/audit.sql"
sudo su - postgres -c "psql -d template_postgis -c \"CREATE EXTENSION IF NOT EXISTS hstore;\""

# close template database
sudo su - postgres -c "psql -d template_postgis -c \"VACUUM FULL;\""
sudo su - postgres -c "psql -d template_postgis -c \"VACUUM FREEZE;\""
sudo su - postgres -c "psql -d postgres -c \"UPDATE pg_database SET datistemplate='true' WHERE datname='template_postgis';\""
sudo su - postgres -c "psql -d postgres -c \"UPDATE pg_database SET datallowconn='false' WHERE datname='template_postgis';\""

# create gislab database
sudo su - postgres -c "createdb -T template_postgis gislab"
sudo su - postgres -c "psql -c \"GRANT CONNECT ON DATABASE gislab TO labusers;\""


# vim: set syntax=sh ts=4 sts=4 sw=4 noet:
